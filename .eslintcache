[{"C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\index.js":"1","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\App.js":"2","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\context\\api.js":"3","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\pages\\Error.js":"4","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\pages\\Splash.js":"5","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\pages\\Earth.js":"6","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\helpers\\Constants.js":"7","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\CountryTotals.js":"8","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\Footer.js":"9","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\WhosBad.js":"10","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\YesterdayCases.js":"11","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\Dashboard.js":"12","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\CaseChart.js":"13","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\Countries.js":"14","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\TickerSample.js":"15","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\CountryDailies.js":"16","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\CaseTrend.js":"17","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\XChart.js":"18","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\pages\\Home.js":"19","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\DeathTrend.js":"20","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\Today.js":"21","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\CountryVacs.js":"22","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\DailyVacs.js":"23","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\pages\\Stats.js":"24","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\Banner.js":"25","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\index.js":"26","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\App.js":"27","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\context\\api.js":"28","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\pages\\Splash.js":"29","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\pages\\Earth.js":"30","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\pages\\Stats.js":"31","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\pages\\Error.js":"32","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\pages\\Home.js":"33","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\helpers\\Constants.js":"34","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\CountryTotals.js":"35","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\Footer.js":"36","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\Dashboard.js":"37","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\CountryDailies.js":"38","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\Banner.js":"39","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\Today.js":"40","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\TickerSample.js":"41","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\Countries.js":"42","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\DeathTrend.js":"43","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\CaseTrend.js":"44","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\CountryVacs.js":"45","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\DailyVacs.js":"46","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\XChart.js":"47","C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\CaseChart.js":"48"},{"size":456,"mtime":1607356140722,"results":"49","hashOfConfig":"50"},{"size":673,"mtime":1631823473472,"results":"51","hashOfConfig":"50"},{"size":21647,"mtime":1626118730929,"results":"52","hashOfConfig":"50"},{"size":242,"mtime":1624299893115,"results":"53","hashOfConfig":"50"},{"size":5646,"mtime":1631824030250,"results":"54","hashOfConfig":"50"},{"size":285,"mtime":1607652878614,"results":"55","hashOfConfig":"50"},{"size":2080,"mtime":1618240561721,"results":"56","hashOfConfig":"50"},{"size":4142,"mtime":1624302139532,"results":"57","hashOfConfig":"50"},{"size":994,"mtime":1624231823086,"results":"58","hashOfConfig":"50"},{"size":14005,"mtime":1616791622573,"results":"59","hashOfConfig":"50"},{"size":2137,"mtime":1616962683911,"results":"60","hashOfConfig":"50"},{"size":13440,"mtime":1624302385581,"results":"61","hashOfConfig":"50"},{"size":3323,"mtime":1624301860183,"results":"62","hashOfConfig":"50"},{"size":3728,"mtime":1624301897187,"results":"63","hashOfConfig":"50"},{"size":4878,"mtime":1624295223427,"results":"64","hashOfConfig":"50"},{"size":17899,"mtime":1624307073182,"results":"65","hashOfConfig":"50"},{"size":1125,"mtime":1624301897187,"results":"66","hashOfConfig":"50"},{"size":4746,"mtime":1624217178307,"results":"67","hashOfConfig":"50"},{"size":2887,"mtime":1624300402433,"results":"68","hashOfConfig":"50"},{"size":1236,"mtime":1623863368842,"results":"69","hashOfConfig":"50"},{"size":4132,"mtime":1623846191729,"results":"70","hashOfConfig":"50"},{"size":4715,"mtime":1624302263813,"results":"71","hashOfConfig":"50"},{"size":9360,"mtime":1624297145800,"results":"72","hashOfConfig":"50"},{"size":1026,"mtime":1624300977177,"results":"73","hashOfConfig":"50"},{"size":400,"mtime":1624301669377,"results":"74","hashOfConfig":"50"},{"size":456,"mtime":1607356140722,"results":"75","hashOfConfig":"76"},{"size":673,"mtime":1631823473472,"results":"77","hashOfConfig":"76"},{"size":21647,"mtime":1626118730929,"results":"78","hashOfConfig":"76"},{"size":5646,"mtime":1631824030250,"results":"79","hashOfConfig":"76"},{"size":285,"mtime":1607652878614,"results":"80","hashOfConfig":"76"},{"size":1026,"mtime":1624300977177,"results":"81","hashOfConfig":"76"},{"size":242,"mtime":1624299893115,"results":"82","hashOfConfig":"76"},{"size":2887,"mtime":1624300402433,"results":"83","hashOfConfig":"76"},{"size":2080,"mtime":1618240561721,"results":"84","hashOfConfig":"76"},{"size":4142,"mtime":1624302139532,"results":"85","hashOfConfig":"76"},{"size":994,"mtime":1624231823086,"results":"86","hashOfConfig":"76"},{"size":13440,"mtime":1624302385581,"results":"87","hashOfConfig":"76"},{"size":17899,"mtime":1624307073182,"results":"88","hashOfConfig":"76"},{"size":400,"mtime":1624301669377,"results":"89","hashOfConfig":"76"},{"size":4132,"mtime":1623846191729,"results":"90","hashOfConfig":"76"},{"size":4878,"mtime":1624295223427,"results":"91","hashOfConfig":"76"},{"size":3728,"mtime":1624301897187,"results":"92","hashOfConfig":"76"},{"size":1236,"mtime":1623863368842,"results":"93","hashOfConfig":"76"},{"size":1125,"mtime":1624301897187,"results":"94","hashOfConfig":"76"},{"size":4715,"mtime":1624302263813,"results":"95","hashOfConfig":"76"},{"size":9360,"mtime":1624297145800,"results":"96","hashOfConfig":"76"},{"size":4746,"mtime":1624217178307,"results":"97","hashOfConfig":"76"},{"size":3323,"mtime":1624301860183,"results":"98","hashOfConfig":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"1ods6l7",{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"101"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"101"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"101"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"101"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"101"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"101"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"101"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"101"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"101"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"101"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"101"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"101"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13lynsj",{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\index.js",[],["210","211"],"C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\App.js",["212"],"import React, { useState } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Error from './pages/Error';\nimport Splash from './pages/Splash';\nimport Earth from './pages/Earth';\nimport Home from './pages/Home';\nimport Stats from './pages/Stats';\n\nfunction App() {\n\n  return(\n    <>\n    <div className='App'>\n      <Switch>\n        <Route exact path=\"/\" component={Splash}/>\n        <Route exact path=\"/Home\" component={Home}/>\n        <Route exact path=\"/Stats\" component={Stats}/>\n        <Route exact path=\"/earth\" component={Earth}/>\n        <Route component={Error}/>\n      </Switch>\n    </div>\n    </>\n  );\n}\nexport default App;","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\context\\api.js",["213","214","215","216","217"],"import React, { useState, createContext } from 'react';\r\nimport {  dailyApi, earthApi, newsApi, countriesApi, \r\n          countryApi, geoApi, infoApi, vacApi, owidApi } \r\n        from '../helpers/Constants';\r\nimport axios from 'axios';\r\n\r\nexport const EarthContext = createContext();\r\nexport const AllContext = createContext();\r\nexport const CountryContext = createContext();\r\nexport const UserContext = createContext();\r\nexport const StatsContext = createContext();\r\n\r\nexport const CoronaProvider = ({ children }) => {\r\n\r\n  const [countries, setCountries] = useState([]);\r\n  const [countriesLoading, setCountriesLoading] = useState(true);\r\n  const [countriesError, setCountriesError] = useState(false);\r\n\r\n  const [userDetails, setUserDetails] = useState();\r\n  const [userLoading, setUserLoading] = useState(true);\r\n  const [userError, setUserError] = useState(false);\r\n\r\n  const [countryTotals, setCountryTotals] = useState([]);\r\n  const [countryTotalsLoading, setCountryTotalsLoading] = useState(true);\r\n  const [countryTotalsError, setCountryTotalsError] = useState(false);\r\n\r\n  const [countryDailies, setCountryDailies] = useState([]);\r\n  const [countryDailiesLoading, setCountryDailiesLoading] = useState(true);\r\n  const [countryDailiesError, setCountryDailiesError] = useState(false);\r\n\r\n  const [countryInfo, setCountryInfo] = useState([]);\r\n  const [countryInfoLoading, setCountryInfoLoading] = useState(true);\r\n  const [countryInfoError, setCountryInfoError] = useState(false);\r\n\r\n  const [countryNews, setCountryNews] = useState([]);\r\n  const [countryNewsLoading, setCountryNewsLoading] = useState(true);\r\n  const [countryNewsError, setCountryNewsError] = useState(false);\r\n\r\n  const [earth, setEarth] = useState([]);\r\n  const [earthLoading, setEarthLoading] = useState(true);\r\n  const [earthError, setEarthError] = useState(false);\r\n\r\n  const [whosBad, setWhosBad] = useState([]);\r\n  const [whosBadLoading, setWhosBadLoading] = useState(true);\r\n  const [whosBadError, setWhosBadError] = useState(false);\r\n\r\n  const [country, setCountry] = useState('Bosnia');\r\n  const [countryList, setCountryList] = useState([]);\r\n\r\n  const [ stats, setStats ] = useState([]);\r\n  const [ vacStats, setVacStats ] = useState([]);\r\n\r\n  const [ countryStats, setCountryStats ] = useState(null);\r\n  const [ countryStatsLoading, setCountryStatsLoading ] = useState(true);\r\n  const [ countryStatsError, setCountryStatsError ] = useState(true);\r\n\r\n  const [ vaccinations, setVaccinations ] = useState([]);\r\n  const [ vaccinationsLoading, setVaccinationsLoading ] = useState(true);\r\n  const [ vaccinationsError, setVaccinationsError ] = useState(false);\r\n\r\n  const [ vaccinationDailies, setVaccinationsDailies ] = useState([]);\r\n\r\n  const [ owid, setOwid ] = useState([]);\r\n  const [ owidLoading, setOwidLoading ] = useState(true);\r\n  const [ owidError, setOwidError ] = useState(false);\r\n\r\n  // local arrays:\r\n  const countryData = [];\r\n  const countryListData = [];\r\n\r\n  const getEarth = async () => {\r\n      await axios.get(earthApi)\r\n          .then(resp => {\r\n            if (resp.status >= 200 && resp.status <= 299) {\r\n              // console.log('api-earth', resp.data);\r\n              setEarth(resp.data);\r\n              setEarthLoading(false);\r\n              setEarthError(false);\r\n              } else {\r\n              setEarthLoading(false);\r\n              setEarthError(true);\r\n              throw new Error(resp.statusText);\r\n            }})\r\n          .catch((error) => console.log(error));           \r\n  };\r\n\r\n  const getCountries = async () => {\r\n      await axios.get(countriesApi)\r\n          .then(resp => {\r\n            if (resp.status >= 200 && resp.status <= 299) {\r\n              // console.log('api-countries', resp.data);\r\n              setCountries(resp.data);\r\n              setCountriesLoading(false);\r\n              setCountriesError(false);\r\n              } else {\r\n              setCountriesLoading(false);\r\n              setCountriesError(true);\r\n              throw new Error(resp.statusText);\r\n            }})\r\n          .catch((error) => console.log(error));           \r\n  };\r\n\r\n  const getVaccinations = (countryName) => {\r\n    setVaccinations([]);\r\n    setVaccinationsLoading(true);\r\n    setVaccinationsError(false);\r\n\r\n    // must adjust some names ... do not match exactly from data sources\r\n    let name = '';\r\n    switch(countryName) {\r\n      case 'USA':\r\n        name = 'United States';\r\n        break;\r\n      case 'UK':\r\n        name = 'United Kingdom';\r\n        break;\r\n      case 'Bosnia':\r\n        name = 'Bosnia and Herzegovina';\r\n        break;\r\n      default:\r\n        name = countryName;      \r\n    }\r\n\r\n    const xData = owid.filter(country => country.location === name );\r\n\r\n    setVaccinations(xData);\r\n    setVaccinationsLoading(false);\r\n    setVaccinationsError(false);\r\n    \r\n  }\r\n\r\n  const getOwid = async () => {\r\n    // must reset vacStats >> choosing another country after coming BACK from Stats page\r\n    // renders multiple OWID stats ...\r\n    // setVacStats([]);\r\n\r\n    await axios.get(owidApi)\r\n      .then(resp => {\r\n        if (resp.status >= 200 && resp.status <= 299) {\r\n          const data = resp.data;\r\n\r\n          let countries = [];\r\n          let keys = Object.keys(resp.data); // NOT whosBad ... \r\n          for (var i=0; i < keys.length; i++) { countries.push(keys[i]); } \r\n\r\n          let new_cases = 0;\r\n          let location = '';\r\n          let people_fully_vaccinated = 0;\r\n          let people_vaccinated = 0;\r\n          let people_fully_vaccinated_per_hundred = 0;\r\n          let people_vaccinated_per_hundred = 0;\r\n          let new_vaccinations = 0;\r\n\r\n          for (var j = 0; j < countries.length; j++) {\r\n\r\n            location = data[countries[j]].location;\r\n            new_cases = data[countries[j]].data[data[countries[j]].data.length -1].new_cases;\r\n            people_fully_vaccinated = data[countries[j]].data[data[countries[j]].data.length -1].people_fully_vaccinated;\r\n            people_vaccinated = data[countries[j]].data[data[countries[j]].data.length -1].people_vaccinated;\r\n            people_fully_vaccinated_per_hundred = data[countries[j]].data[data[countries[j]].data.length -1].people_fully_vaccinated_per_hundred;\r\n            people_vaccinated_per_hundred = data[countries[j]].data[data[countries[j]].data.length -1].people_vaccinated_per_hundred;\r\n            new_vaccinations = data[countries[j]].data[data[countries[j]].data.length -1].new_vaccinations;\r\n            \r\n            let rowStats = {\r\n              name: countries[j],\r\n              location,\r\n              new_cases,\r\n              people_fully_vaccinated,\r\n              people_fully_vaccinated_per_hundred,\r\n              people_vaccinated,\r\n              people_vaccinated_per_hundred,\r\n              new_vaccinations,\r\n              data: data[countries[j]].data\r\n                                  \r\n            };\r\n            vacStats.push(rowStats);\r\n          }\r\n          \r\n          setOwid(vacStats);\r\n          setOwidLoading(false);\r\n          setOwidError(false);\r\n          } else {\r\n          setOwidLoading(false);\r\n          setOwidError(true);\r\n          throw new Error(resp.statusText);\r\n        }})\r\n      .catch((error) => console.log(error));           \r\n    };\r\n\r\n  const getCountryTotals = async (countryName) => {\r\n    await axios.get(countryApi + countryName)\r\n        .then(resp => {\r\n          if (resp.status >= 200 && resp.status <= 299) {\r\n            // console.log('api-countries', resp.data);\r\n            setCountryTotals(resp.data);\r\n            setCountryTotalsLoading(false);\r\n            setCountryTotalsError(false);\r\n            } else {\r\n            setCountryTotalsLoading(false);\r\n            setCountryTotalsError(true);\r\n            throw new Error(resp.statusText);\r\n          }})\r\n        .catch((error) => console.log(error));           \r\n    };\r\n\r\n  const getCountryInfo = async (countryName) => {\r\n    await axios.get(infoApi + countryName)\r\n        .then(resp => {\r\n          if (resp.status >= 200 && resp.status <= 299) {\r\n            // console.log('api-countries', resp.data);\r\n            setCountryInfo(resp.data);\r\n            setCountryInfoLoading(false);\r\n            setCountryInfoError(false);\r\n            } else {\r\n            setCountryInfoLoading(false);\r\n            setCountryInfoError(true);\r\n            throw new Error(resp.statusText);\r\n          }})\r\n        .catch((error) => console.log(error));           \r\n    };\r\n\r\n  const getWhosBad = async () => {\r\n    // must reset stats >> choosing another country after coming BACK from Stats page\r\n    // renders multiple OWID stats ...\r\n    // setStats([]); // NOPE\r\n\r\n    await axios.get(dailyApi)\r\n        .then(resp => {\r\n          if (resp.status >= 200 && resp.status <= 299) {\r\n            // console.log('getWhosBad', resp.data);\r\n            setWhosBad(resp.data);\r\n            setWhosBadLoading(false);\r\n            setWhosBadError(false);\r\n\r\n            let countries = [];\r\n            let keys = Object.keys(resp.data); //  NOT 'whosBad' ...\r\n            // will be avail. in other components ... is this the thing I misunderstanding about state?????\r\n            for (var i=0; i < keys.length; i++) { countries.push(keys[i]); } \r\n\r\n            let yesterdayCasesPerc = 0;\r\n            let yesterdayCases = 0;\r\n            let yesterdayDeathsPerc = 0;\r\n            let yesterdayDeaths = 0;\r\n            let threeDayCasesPerc = 0;\r\n            let threeDayCasesAve = 0;\r\n            let pastWeekCasesAve = 0;\r\n\r\n            let previousWeekCasesAve = 0;\r\n            let pastMonthCasesAve = 0;\r\n            let pastVsPreviousWeekCasesAve = 0;\r\n            let pastVsPreviousWeekCasesAvePerc = 0;\r\n\r\n            let pastWeekDeathsAve = 0;\r\n            let previousWeekDeathsAve = 0;\r\n            let pastVsPreviousWeekDeathsAve = 0;\r\n            let pastVsPreviousWeekDeathsAvePerc = 0;\r\n\r\n            for (var j = 0; j < countries.length; j++) {\r\n                // console.log('country', countries[j]);\r\n\r\n                // ****************************** Yesterday Cases\r\n                yesterdayCases = \r\n                  (resp.data[countries[j]][resp.data[countries[j]].length - 1].confirmed \r\n                    - resp.data[countries[j]][resp.data[countries[j]].length - 2].confirmed)\r\n\r\n                // ****************************** Yesterday %\r\n                yesterdayCasesPerc = \r\n                  (resp.data[countries[j]][resp.data[countries[j]].length - 1].confirmed \r\n                    - resp.data[countries[j]][resp.data[countries[j]].length - 2].confirmed)\r\n                        /\r\n                      resp.data[countries[j]][resp.data[countries[j]].length - 2].confirmed\r\n                      * 100;              \r\n\r\n                  // ****************************** Yesterday Deaths\r\n                yesterdayDeaths = \r\n                  (resp.data[countries[j]][resp.data[countries[j]].length - 1].deaths \r\n                    - resp.data[countries[j]][resp.data[countries[j]].length - 2].deaths)\r\n\r\n\r\n                // ****************************** Yesterday Deaths %\r\n                // only report if there was a death on last reported day (i.e. yesterday)\r\n                // if we don't filter here, we run into many (0/1) = 0 - as well as (1/0) = NaN  \r\n                yesterdayDeathsPerc = 0; \r\n\r\n                if  (resp.data[countries[j]][resp.data[countries[j]].length - 1].deaths \r\n                    - resp.data[countries[j]][resp.data[countries[j]].length - 2].deaths > 0) {\r\n\r\n                  yesterdayDeathsPerc = \r\n                    (resp.data[countries[j]][resp.data[countries[j]].length - 1].deaths \r\n                      - resp.data[countries[j]][resp.data[countries[j]].length - 2].deaths)\r\n                          /\r\n                        resp.data[countries[j]][resp.data[countries[j]].length - 2].deaths\r\n                        * 100;              \r\n                }\r\n\r\n                // ****************************** 3-day Cases\r\n                threeDayCasesAve = \r\n                    Math.ceil((resp.data[countries[j]][resp.data[countries[j]].length - 1].confirmed \r\n                    - resp.data[countries[j]][resp.data[countries[j]].length - 4].confirmed)\r\n                    / 3);\r\n\r\n                // ****************************** 3-day %\r\n                threeDayCasesPerc = \r\n                    ((resp.data[countries[j]][resp.data[countries[j]].length - 1].confirmed \r\n                    - resp.data[countries[j]][resp.data[countries[j]].length - 4].confirmed) \r\n                        /\r\n                      resp.data[countries[j]][resp.data[countries[j]].length - 4].confirmed\r\n                      * 100 / 3);              \r\n\r\n                // ****************************** Past week case Ave     \r\n                pastWeekCasesAve = \r\n                  Math.ceil((resp.data[countries[j]][resp.data[countries[j]].length - 1].confirmed \r\n                    - resp.data[countries[j]][resp.data[countries[j]].length - 8].confirmed)\r\n                      / 7);\r\n\r\n                // ****************************** Previous week case Ave\r\n                previousWeekCasesAve = \r\n                  Math.ceil((resp.data[countries[j]][resp.data[countries[j]].length - 8].confirmed \r\n                    - resp.data[countries[j]][resp.data[countries[j]].length - 15].confirmed)\r\n                      / 7);\r\n\r\n                        // ****************************** Past week death Ave     \r\n                pastWeekDeathsAve = \r\n                Math.ceil((resp.data[countries[j]][resp.data[countries[j]].length - 1].deaths \r\n                  - resp.data[countries[j]][resp.data[countries[j]].length - 8].deaths)\r\n                    / 7);\r\n\r\n                // ****************************** Previous week death Ave\r\n                previousWeekDeathsAve = \r\n                  Math.ceil((resp.data[countries[j]][resp.data[countries[j]].length - 8].deaths \r\n                    - resp.data[countries[j]][resp.data[countries[j]].length - 15].deaths)\r\n                      / 7);\r\n\r\n                // ****************************** past 30 days Case Ave\r\n                pastMonthCasesAve = \r\n                  Math.ceil((resp.data[countries[j]][resp.data[countries[j]].length - 1].confirmed \r\n                    - resp.data[countries[j]][resp.data[countries[j]].length - 31].confirmed)\r\n                      / 30);\r\n\r\n                // past vs. previous week case av.\r\n                // reset to 0 - to handle 0 pastVsPreviousWeekCasesAve instances\r\n                pastVsPreviousWeekCasesAve = 0;\r\n                pastVsPreviousWeekCasesAvePerc = 0;\r\n\r\n                // if (pastMonthCasesAve !== 0 && previousWeekCasesAve !== 0)\r\n                pastVsPreviousWeekCasesAve = pastWeekCasesAve - previousWeekCasesAve;\r\n\r\n                if (pastMonthCasesAve !== 0 && previousWeekCasesAve !== 0) {\r\n                  pastVsPreviousWeekCasesAvePerc = \r\n                      (pastWeekCasesAve - previousWeekCasesAve) /\r\n                          previousWeekCasesAve * 100;\r\n                }\r\n\r\n\r\n                // death trend \r\n                pastVsPreviousWeekDeathsAve = 0;\r\n                pastVsPreviousWeekDeathsAvePerc = 0;\r\n\r\n                pastVsPreviousWeekDeathsAve = pastWeekDeathsAve - previousWeekDeathsAve;\r\n\r\n                if (pastWeekDeathsAve !== 0 && previousWeekDeathsAve !== 0) {\r\n                  pastVsPreviousWeekDeathsAvePerc = \r\n                    (pastWeekDeathsAve - previousWeekDeathsAve) /\r\n                        previousWeekDeathsAve * 100;\r\n                }\r\n\r\n\r\n                let rowStats = {\r\n                    name: countries[j],\r\n                    yesterdayCases,\r\n                    yesterdayCasesPerc,\r\n                    yesterdayDeaths,\r\n                    yesterdayDeathsPerc,\r\n                    threeDayCasesAve,\r\n                    threeDayCasesPerc,\r\n                    pastWeekCasesAve,\r\n                    previousWeekCasesAve,\r\n                    pastMonthCasesAve,\r\n                    pastVsPreviousWeekCasesAve,\r\n                    pastVsPreviousWeekCasesAvePerc,\r\n                    pastVsPreviousWeekDeathsAve,\r\n                    pastVsPreviousWeekDeathsAvePerc                       \r\n                };\r\n                stats.push(rowStats);\r\n            }\r\n\r\n            setStats(stats);\r\n            // console.log('stats', stats);\r\n\r\n          } else {\r\n            setWhosBadLoading(false);\r\n            setWhosBadError(true);           \r\n            throw new Error(resp.statusText);\r\n            \r\n          }})\r\n        .catch((error) => console.log(error));           \r\n    };\r\n\r\n  const getCountryNews = async (isoCode) => {\r\n    // insert isoCode into newsApi\r\n    const url = newsApi.replace('<>', isoCode);\r\n    // console.log(url);\r\n\r\n    await axios.get(url)\r\n        .then(resp => {\r\n          if (resp.status >= 200 && resp.status <= 299) {\r\n            // console.log('api-news', resp.data);\r\n            setCountryNews(resp.data);\r\n            setCountryNewsLoading(false);\r\n            setCountryNewsError(false);\r\n            } else {\r\n            setCountryNewsLoading(false);\r\n            setCountryNewsError(true);\r\n            throw new Error(resp.statusText);\r\n          }})\r\n        .catch((error) => console.log(error));           \r\n    };    \r\n\r\n  // NOTE: Using fetch here, just for s&g!    \r\n  const getCountryDailies = (countryName) => {\r\n    // console.log('getTest', countryName);\r\n    \r\n    // ALT METHOD : ASYNC/AWAIT\r\n    // const response = await fetch(dailyApi);\r\n    // const data = response.json();\r\n\r\n    fetch(dailyApi)\r\n        .then( response => response.json() )\r\n        .then( data => {\r\n            setCountryDailiesLoading(false);\r\n            setCountryDailiesError(false);\r\n\r\n            // load country names for the dropdown list\r\n            // gen list from dailyApi ...\r\n            let keys = Object.keys(data);\r\n            for (var i=0; i < keys.length; i++) \r\n            {\r\n              countryListData.push(keys[i]);\r\n            }             \r\n            setCountryList(countryListData);\r\n\r\n            data && data[countryName].forEach(({ date, confirmed, recovered, deaths }) => \r\n              {\r\n                  let row = [];\r\n                  row.push(date, confirmed, recovered, deaths);\r\n                  countryData.push(row);\r\n              }\r\n          );\r\n\r\n        // NOTE: countryData = array, data = object (contains keys)\r\n        setCountryDailies(countryData);\r\n        // setCountryDailies(data);\r\n      });          \r\n      // console.log('countryDailies', countryDailies);\r\n    };\r\n      \r\n  const getUserGeolocationDetails = async () => {\r\n        await axios.get(geoApi)\r\n            .then(resp => {\r\n              if (resp.status >= 200 && resp.status <= 299) {\r\n\r\n                setUserDetails(resp.data);\r\n                setCountry(resp.data.country_name);\r\n\r\n                setUserLoading(false);\r\n                setUserError(false)\r\n              } else {\r\n                setUserLoading(false);\r\n                setUserError(true);\r\n                throw new Error(resp.statusText);\r\n              }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setUserLoading(false);\r\n                setUserError(false);\r\n            });\r\n    };\r\n\r\n  const getCountryStats = (countryName) => {\r\n        // must adjust some names ... do not match exactly from data sources\r\n        let name = '';\r\n        switch(countryName) {\r\n          case 'USA':\r\n            name = 'US';\r\n            break;\r\n          case 'UK':\r\n            name = 'United Kingdom';\r\n            break;\r\n          case 'Bosnia':\r\n            name = 'Bosnia and Herzegovina';\r\n            break;\r\n          default:\r\n            name = countryName;      \r\n        }\r\n\r\n        // console.log(countryName, name);\r\n        const cStats = stats.filter( (country) => {\r\n          return country.name === name;\r\n        });\r\n\r\n        setCountryStats(cStats);\r\n        setCountryStatsLoading(false);\r\n  };\r\n\r\n  return (\r\n      <UserContext.Provider \r\n        value={{ getUserGeolocationDetails, country, userDetails, userLoading, userError }}>\r\n\r\n          <EarthContext.Provider\r\n            value={{ getEarth, earth, earthLoading, earthError, \r\n                     getOwid, owid, owidLoading, owidError }}>\r\n\r\n            <CountryContext.Provider\r\n              value={{  getCountryTotals, countryTotals, countryList, countryTotalsLoading,             countryTotalsError, getCountryDailies, countryDailies, countryDailiesLoading, countryDailiesError,  getCountryInfo, countryInfo, countryInfoLoading, countryInfoError,\r\n              getCountryNews, countryNews, countryNewsLoading, countryNewsError,\r\n              getWhosBad, whosBad, whosBadLoading, whosBadError,\r\n              getVaccinations, vaccinations, vaccinationsLoading, vaccinationsError\r\n                }}>\r\n\r\n                    <AllContext.Provider\r\n                        value={{ getCountries, countries, countriesLoading, countriesError  }}\r\n                        >\r\n                          <StatsContext.Provider\r\n                            value={{ stats, \r\n                                    getCountryStats, countryStats, countryStatsLoading, countryStatsError }}>\r\n                              {children}\r\n                          </StatsContext.Provider>\r\n                        \r\n                    </AllContext.Provider>\r\n\r\n            </CountryContext.Provider>\r\n\r\n          </EarthContext.Provider>\r\n\r\n      </UserContext.Provider>      \r\n    ); \r\n\r\n};","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\pages\\Error.js",[],"C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\pages\\Splash.js",["218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235"],"C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\pages\\Earth.js",[],"C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\helpers\\Constants.js",[],"C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\CountryTotals.js",["236","237","238","239","240","241","242","243","244","245","246","247","248"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { CountryContext, StatsContext } from '../context/api'; \r\nimport NumberFormat from 'react-number-format';\r\nimport { motion } from 'framer-motion';\r\nimport CaseTrend from './CaseTrend';\r\nimport DeathTrend from './DeathTrend';\r\nimport CountryVacs from './CountryVacs';\r\n\r\nconst CountryTotals = ({ countryName, nativeName }) => {\r\n    const countryData = useContext(CountryContext);\r\n    const { getCountryTotals, countryTotalsLoading, countryTotalsError } = useContext(CountryContext);\r\n    const { stats, getCountryStats, countryStats, countryStatsLoading } = useContext(StatsContext);\r\n    const { getVaccinations, vaccinations, vaccinationsLoading, vaccinationsError} = useContext(CountryContext);\r\n\r\n    useEffect( () => {\r\n        getCountryTotals(countryName);\r\n    },[countryName]);  \r\n\r\n    const countryTotals = countryData.countryTotals;\r\n    const { country, population, continent, \r\n            cases, todayCases, deaths, \r\n            todayDeaths, countryInfo,\r\n            oneCasePerPeople, oneDeathPerPeople } \r\n        = countryTotals; \r\n\r\n    useEffect( () => {\r\n        getCountryStats(country);\r\n    },[country]);\r\n\r\n    useEffect( () => {\r\n        getVaccinations(country);\r\n    },[country]); \r\n\r\n    // console.log('countryTotals', vaccinations);\r\n\r\n    if (countryTotalsError) {\r\n        return (\r\n            <div className='container'>\r\n                <h4>Ooops! Something went wrong!</h4>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (countryTotalsLoading || countryStatsLoading || vaccinationsLoading) {\r\n        return (\r\n          <div className='container'>\r\n            <h4>Loading up the country stats...</h4>\r\n          </div>\r\n        )\r\n      }\r\n\r\n    return ( \r\n        <motion.div className='container'>\r\n\r\n            { country !== nativeName && <h6 className='native-name'>{nativeName}</h6> }\r\n            <a style={{textDecoration: 'none'}} href={'https://www.google.com/maps/place/' + country}\r\n                target=\"_blank\">\r\n                    <h4>{country}</h4>\r\n            </a>         \r\n\r\n            {countryInfo ? \r\n                <motion.img className='img-flag' src={countryInfo.flag} alt={country} \r\n                    initial={{ y: \"-100vh\" }}\r\n                    animate={{ y: 0 }}\r\n                    // Tween, Spring or Inertia.\r\n                    transition={{ type: \"tween\", stiffness: 60, duration: 1.5 }}\r\n                /> \r\n                : \r\n                ''\r\n            }\r\n            \r\n            <h6>{continent}</h6>\r\n            <h6>pop. <NumberFormat displayType={'text'} thousandSeparator=\",\" value={population} /></h6>\r\n            <p className='small-text'>Note: The day is reset after Midnight GMT+0</p>\r\n\r\n            { countryStats[0] &&\r\n                <CaseTrend \r\n                    rank={1}\r\n                    pastVsPreviousWeekCasesAve={countryStats[0].pastVsPreviousWeekCasesAve}\r\n                    pastVsPreviousWeekCasesAvePerc={countryStats[0].pastVsPreviousWeekCasesAvePerc}\r\n                /> \r\n            }\r\n\r\n            { countryStats[0] &&\r\n                <DeathTrend \r\n                    rank={1}\r\n                    pastVsPreviousWeekDeathsAve={countryStats[0].pastVsPreviousWeekDeathsAve}\r\n                    pastVsPreviousWeekDeathsAvePerc={countryStats[0].pastVsPreviousWeekDeathsAvePerc}\r\n                /> \r\n            }\r\n\r\n            { vaccinations[0] &&\r\n                <CountryVacs \r\n                    location={vaccinations[0].location}\r\n                    new_cases={vaccinations[0].new_cases}\r\n                    people_fully_vaccinated={vaccinations[0].people_fully_vaccinated} people_fully_vaccinated_per_hundred={vaccinations[0].people_fully_vaccinated_per_hundred}\r\n                    people_vaccinated={vaccinations[0].people_vaccinated}\r\n                    people_vaccinated_per_hundred={vaccinations[0].people_vaccinated_per_hundred}\r\n                    new_vaccinations={vaccinations[0].new_vaccinations}\r\n                />\r\n            }\r\n        \r\n        </motion.div>     \r\n    )\r\n};\r\n\r\nexport default CountryTotals;","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\Footer.js",[],"C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\WhosBad.js",["249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275"],"C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\YesterdayCases.js",[],"C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\Dashboard.js",["276","277","278","279","280","281"],"import React, { useContext } from 'react';\r\nimport  { Link, useHistory } from 'react-router-dom';\r\nimport { CountryContext, EarthContext, StatsContext } from '../context/api';\r\nimport NumberFormat from 'react-number-format';\r\nimport DailyVacs from './DailyVacs';\r\n\r\nconst Dashboard = ({num}) => {\r\n    \r\n    let _num = 5;\r\n    let _numTrend = 5;\r\n\r\n    if (num == 0) {\r\n        _num = 250;\r\n        _numTrend = 250;\r\n    }\r\n    \r\n    const { stats } = useContext(StatsContext);\r\n    const { earth } = useContext(EarthContext);\r\n    const { countryInfo } = useContext(CountryContext);\r\n    const history = useHistory();\r\n\r\n    const _name  = countryInfo[0].name;\r\n    // console.log(_name);\r\n\r\n    // order yesterday cases:\r\n    let topCases = stats.sort(function(a, b) {\r\n        return a['yesterdayCases'] - b['yesterdayCases']}).reverse().slice(0, _num);\r\n    // console.log('Yesterday Cases', topCases);\r\n\r\n    // order yesterday deaths:\r\n    let topDeaths = stats.sort(function(a, b) {\r\n      return a['yesterdayDeaths'] - b['yesterdayDeaths']}).reverse().slice(0, _num);\r\n    // console.log('Yesterday Deaths', topDeaths);  \r\n\r\n    // order three-day case av.:\r\n    let topThreeDayAve = stats.sort(function(a, b) {\r\n       return a['threeDayCasesAve'] - b['threeDayCasesAve']}).reverse().slice(0, _num);\r\n    // console.log('threeDayCases', topThreeDayAve); \r\n      \r\n    // order three-day case av.:\r\n    let topPastWeekAve = stats.sort(function(a, b) {\r\n        return a['pastWeekCasesAve'] - b['pastWeekCasesAve']}).reverse().slice(0, _num);\r\n    // console.log('pastWeekCases', topPastWeekAve);  \r\n\r\n    // order case % increase\r\n    let topCasesPerc = stats.sort(function(a, b) {\r\n        return a['yesterdayCasesPerc'] - b['yesterdayCasesPerc']}).reverse().slice(0, _num);\r\n    // console.log('yesterdayCasesPerc', topCasesPerc); \r\n\r\n    // order death % increase\r\n    // let topDeathsPerc = stats.find(element => element > 0); //returns only first element\r\n    let topDeathsPerc = stats.sort(function(a, b) {\r\n        return a['yesterdayDeathsPerc'] - b['yesterdayDeathsPerc']}).reverse().slice(0, _num);\r\n    // console.log('yesterdayDeathsPerc', topDeathsPerc); \r\n    \r\n     // order past v previous week case av.:\r\n     let topPvPWeekAve = stats.sort(function(a, b) {\r\n        return a['pastVsPreviousWeekCasesAve'] \r\n            - b['pastVsPreviousWeekCasesAve']}).reverse().slice(0, _numTrend);\r\n\r\n    let topPvPWeekAvePerc = stats.sort(function(a, b) {\r\n        return a['pastVsPreviousWeekCasesAvePerc'] \r\n            - b['pastVsPreviousWeekCasesAvePerc']}).reverse().slice(0, _numTrend);\r\n            \r\n    return (\r\n\r\n        // <div className=\"container stats-container\">\r\n        <div className=\"container\">\r\n            <p></p>\r\n            <hr />\r\n            <h4>Earth</h4>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/9/97/The_Earth_seen_from_Apollo_17.jpg\" \r\n                alt=\"The World\" width='246px' height='198px' />\r\n            <h6>pop. <NumberFormat displayType={'text'} thousandSeparator=\",\" value={earth.population} /></h6>\r\n            \r\n            <p></p>\r\n\r\n            { num !== 0 ? \r\n                <Link className=\"link-to\" to=\"/stats\">View All Stats</Link>\r\n                :\r\n                <Link className=\"link-to\" to=\"/\">Back</Link>          \r\n            }\r\n            \r\n            <p></p>\r\n\r\n            <h5>Yesterday's Highs</h5>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-3\">\r\n                    <ul className='stats-list'>  \r\n                        <h5>Cases</h5>            \r\n                        { topCases.map( (country, index) => {\r\n                            let {name} = country.name;\r\n                            return (\r\n                                <li title=\"Cases\" key={country.name}>\r\n                                    <small>{index+1}</small> \r\n\r\n                                    {/* <strong>{country.name}</strong>  */}\r\n\r\n                                    { country.name === _name ?\r\n                                        <strong \r\n                                            style={{color:'red', \r\n                                            fontWeight: '800',\r\n                                            fontSize: '1.25rem'}}>{country.name}</strong> \r\n                                    :  <strong>{country.name}</strong> \r\n                                    }\r\n\r\n                                    <em><NumberFormat \r\n                                        value={country.yesterdayCases} \r\n                                        displayType={'text'} thousandSeparator=\",\" \r\n                                    /></em>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <ul className='stats-list'>  \r\n                        <h5>Deaths</h5>            \r\n                        { topDeaths.map( (country, index) => {\r\n                            return (\r\n                                <li title=\"Deaths\" key={country.name}>\r\n                                    <small>{index+1}</small> \r\n                                    {/* <strong>{country.name}</strong>  */}\r\n                                    { country.name === _name ?\r\n                                        <strong \r\n                                            style={{color:'red', \r\n                                            fontWeight: '800',\r\n                                            fontSize: '1.25rem'}}>{country.name}</strong> \r\n                                    :  <strong>{country.name}</strong> \r\n                                    }\r\n                                    <em><NumberFormat \r\n                                        value={country.yesterdayDeaths} \r\n                                        displayType={'text'} thousandSeparator=\",\" \r\n                                    /></em>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <ul className='stats-list' title=\"Yesterday's cases (ex. 11) less the day before (10) divided by the day before (equals 1/10 or 10%)\">  \r\n                        <h5>Case Surge*</h5>  \r\n                        {/* <h6>(Highest daily % increase)</h6>           */}\r\n                        { topCasesPerc.map( (country, index) => {\r\n                            return (\r\n                                <li title=\"Case Surge\" key={country.name}>\r\n                                    <small>{index+1}</small> \r\n                                    {/* <strong>{country.name}</strong>  */}\r\n                                    { country.name === _name ?\r\n                                        <strong \r\n                                            style={{color:'red', \r\n                                            fontWeight: '800',\r\n                                            fontSize: '1.25rem'}}>{country.name}</strong> \r\n                                    :  <strong>{country.name}</strong> \r\n                                    }\r\n                                    <em><NumberFormat \r\n                                        value={country.yesterdayCasesPerc} \r\n                                        displayType={'text'} thousandSeparator=\",\" \r\n                                        decimalScale=\"2\"\r\n                                    />%</em>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <ul className='stats-list' title=\"Yesterday's deaths (ex. 11) less the day before (10) divided by the day before (equals 1/10 or 10%)\">  \r\n                        <h5>Death Surge*</h5>            \r\n                        { topDeathsPerc.map( (country, index) => {\r\n                            return (\r\n                                <li title=\"Death Surge\" key={country.name}>\r\n                                    <small>{index+1}</small> \r\n                                    {/* <strong>{country.name}</strong>  */}\r\n                                    { country.name === _name ?\r\n                                        <strong \r\n                                            style={{color:'red', \r\n                                            fontWeight: '800',\r\n                                            fontSize: '1.25rem'}}>{country.name}</strong> \r\n                                    :  <strong>{country.name}</strong> \r\n                                    }\r\n                                    <em><NumberFormat \r\n                                        value={country.yesterdayDeathsPerc} \r\n                                        displayType={'text'} thousandSeparator=\",\" \r\n                                        decimalScale=\"2\"\r\n                                    />%</em>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n           \r\n            <DailyVacs num={_num} />\r\n           \r\n            <hr />\r\n            <div className=\"row trend-list\">\r\n                <h5>Case Trends</h5>\r\n                <table className=\"table table-hover table-trend\">\r\n                    {/* <thead className=\"bg-dark text-light\"> */}\r\n                    <thead style={{backgroundColor: '#f8f8f8'}}>\r\n                        <th>Country</th>\r\n                        <th>Change in avg daily cases (%)</th>\r\n                        <th>Over the last week, avg cases/day</th>\r\n                        <th>2 weeks ago, avg cases/day</th>     \r\n                    </thead>\r\n                    {/* <tbody style={{backgroundColor: '#e7e7e7'}}> */}\r\n                    <tbody>\r\n                        {\r\n                            topPvPWeekAvePerc.map( (country, index) => {\r\n                                return (\r\n                                    <>\r\n                                        <tr key={country.name} className=\"trend-list-data\">\r\n                                            <td>\r\n                                                {/* <small>{index+1}</small>\r\n                                                {' '}{country.name}</td> */}\r\n\r\n                                        { country.name === _name ?\r\n                                        <strong \r\n                                            style={{color:'red', \r\n                                            fontWeight: '800',\r\n                                            fontSize: '1.25rem'}}>{country.name}</strong> \r\n                                    :  <h6>{country.name}</h6> \r\n                                    }\r\n                                                </td>\r\n\r\n                                                <td>\r\n                                                    <em>\r\n                                                        <NumberFormat \r\n                                                            value={country.pastVsPreviousWeekCasesAvePerc}\r\n                                                            displayType={'text'} thousandSeparator=\",\" \r\n                                                            decimalScale=\"1\"\r\n                                                        />%{' '}(\r\n                                                        <NumberFormat \r\n                                                        value={country.pastVsPreviousWeekCasesAve} \r\n                                                        displayType={'text'} thousandSeparator=\",\" \r\n                                                        />)\r\n                                                    </em>\r\n\r\n                                                {' '}\r\n                                                { country.pastVsPreviousWeekCasesAve > 0 \r\n                                                    ?\r\n                                                    <i className=\"fa fa-arrow-up fa-2x\"></i>\r\n                                                    :\r\n                                                    <i className=\"fa fa-arrow-down fa-2x\"></i>\r\n                                                }\r\n                                            </td>\r\n\r\n                                            <td><NumberFormat \r\n                                                value={country.pastWeekCasesAve}\r\n                                                displayType={'text'} thousandSeparator=\",\" \r\n                                            /></td>                                      \r\n                                            <td><NumberFormat \r\n                                                value={country.previousWeekCasesAve}\r\n                                                displayType={'text'} thousandSeparator=\",\" \r\n                                            /></td>                  \r\n                                        </tr>\r\n                                    </>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>    \r\n        </div>            \r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\CaseChart.js",["282"],"import React from 'react'\r\nimport { Bar, Line, defaults } from 'react-chartjs-2'\r\n\r\ndefaults.global.tooltips.enabled = true;\r\ndefaults.global.legend.position = 'top';\r\n\r\nconst CaseChart = ({ title, labels, caseData, lastXCases, lastXCasesSmoothed, lastXAves, lastXVacs }) => {\r\n\r\n    return (\r\n        <div>\r\n            <p></p>\r\n            <Line\r\n                data={{\r\n                        labels: labels,\r\n                        datasets:[\r\n                        {\r\n                            label: title,\r\n                            data: lastXCases,\r\n                            hidden: true,\r\n                            backgroundColor: [\r\n                                'rgba(40, 80, 140, .5)',\r\n                            ],  \r\n                            fill: false,\r\n                            borderColor: [\r\n                                'rgba(0, 150, 50, 1)',\r\n                            ],                          \r\n                        },\r\n                        {\r\n                            label: '7-Day Avg',\r\n                            data: lastXAves, \r\n                            backgroundColor: [\r\n                                'rgba(255, 0, 0, .5)',\r\n                            ],\r\n                            fill: false,\r\n                            borderColor: [\r\n                                'rgba(255, 0, 0, 1)',\r\n                            ],                               \r\n                        },\r\n                        {\r\n                            label: \"Daily Cases/Million\",\r\n                            data: lastXCasesSmoothed,\r\n                            hidden: true,\r\n                            backgroundColor: [\r\n                                'rgba(200, 200, 0, .7)',\r\n                            ],  \r\n                            fill: false,\r\n                            borderColor: [\r\n                                'rgba(200, 200, 0, 1)',\r\n                            ],                          \r\n                        },\r\n                        {\r\n                            label: 'Daily Vaccinations/Million',\r\n                            data: lastXVacs, \r\n                            backgroundColor: [\r\n                                'rgba(0, 0, 255, 1)',\r\n                            ],\r\n                            fill: false,\r\n                            borderColor: [\r\n                                'rgba(0, 0, 255, 1)',\r\n                            ],                               \r\n                        }                         \r\n                    ],\r\n                }}\r\n                height={200}\r\n                width={300}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        yAxes: [\r\n                            {\r\n                                ticks: {\r\n                                    beginAtZero: false,\r\n                                }\r\n                            }\r\n                        ]\r\n                    }, \r\n                    legend: {\r\n                        labels: {\r\n                            fontSize: 12,                          \r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CaseChart;","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\Countries.js",["283","284"],"import React, { useContext, useEffect } from 'react';\r\nimport { AllContext } from '../context/api'; \r\nimport NumberFormat from 'react-number-format';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { motion } from 'framer-motion';\r\nimport ScrollUpButton from \"react-scroll-up-button\";\r\n\r\nconst Countries = () => {\r\n    const countriesData = useContext(AllContext);\r\n    const { getCountries } = useContext(AllContext);\r\n    const countries = countriesData.countries;\r\n\r\n    useEffect(() => {\r\n        getCountries();\r\n    }, []);\r\n\r\n    // console.log('countries', countries);\r\n    return (\r\n        \r\n        <div className='container-fluid'>       \r\n            <p></p><p></p>\r\n            <h6>Country Totals</h6>\r\n            {/* <table className=\"table table-hover\"> */}\r\n\r\n            <Table responsive=\"sm\" striped>\r\n                {/* <thead style={{backgroundColor:'black', color:'white'}}> */}\r\n                <thead>\r\n                    <tr>\r\n                        {/* <th></th> */}\r\n                        <th style={{ textAlign: 'left'}}>Country</th>\r\n                        <th>Cases</th>\r\n                        <th>Deaths</th>\r\n                        {/* <th>Recovered</th> */}\r\n                        <th>Active</th>\r\n                        <th>Critical</th>\r\n                        <th>One Case/pop.</th>\r\n                        <th>One Death/pop.</th>\r\n                        <th>One Test/pop.</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {countries.map((c, index) => {\r\n                        const { country, cases, deaths, recovered, active, critical,\r\n                            oneCasePerPeople, oneDeathPerPeople, oneTestPerPeople } = c;\r\n                        return(\r\n                        <tr >\r\n                            <td style={{ textAlign: 'left'}}>\r\n                                <motion.img src={c.countryInfo.flag} alt={country} \r\n                                    style={{ width: '50px', height: '34px'}} \r\n                                    initial={{ x: \"100vh\" }}\r\n                                    animate={{ x: 0 }}\r\n                                    // Tween, Spring or Inertia.\r\n                                    transition={{ type: \"tween\", stiffness: 60, duration: 2.5 }}\r\n                                />\r\n                                {'  '}{country}\r\n                                \r\n                            </td>             \r\n                            <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={cases} /></td>             \r\n                            <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={deaths} /></td>             \r\n                            {/* <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={recovered} /></td> */}\r\n                            <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={active} /></td> \r\n                            <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={critical} /></td>             \r\n                            <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={oneCasePerPeople} /></td>             \r\n                            <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={oneDeathPerPeople} /></td>             \r\n                            <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={oneTestPerPeople} /></td>             \r\n                        </tr> )\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n\r\n            <ScrollUpButton AnimationDuration={100} />\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Countries;","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\TickerSample.js",["285","286","287"],"import React, { useContext } from 'react';\r\nimport Ticker from 'react-ticker';\r\nimport { EarthContext } from '../context/api';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst MoveStuffAround = () => {\r\n\r\n    const { getEarth, earth, earthLoading, earthError } = useContext(EarthContext);\r\n    // console.log(earth);\r\n\r\n    return (\r\n\r\n        <Ticker>\r\n            {({ index }) => (\r\n                <>\r\n                    {/* <h4\r\n                        style={{color: 'blue'}}>\r\n                            Did you get your Polio vaccine? How 'bout tetanus? &nbsp;\r\n                    </h4>\r\n                    \r\n                    <br />\r\n                    Do you wear a seatbelt? Do you put on a coat when it's cold?<br /> */}\r\n                    <div className=\"container-fluid\">\r\n                    <span>  \r\n                        \r\n                        <p style={{ fontFamily: 'sans-serif', color: 'navy', letterSpacing: '.25rem', fontSize: '1.2rem', fontWeight: '800'}}>\r\n\r\n                            {/* Planet Earth Stats: */}\r\n\r\n                            <NumberFormat displayType={'text'} \r\n                                thousandSeparator=\",\" \r\n                                value={earth.todayCases} \r\n                            /> \r\n                            <span>\r\n                                {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\r\n                                &nbsp;New Cases in the World Today\r\n                                {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\r\n                                &nbsp;&nbsp;\r\n                            </span>\r\n\r\n                            <br />\r\n\r\n                            <NumberFormat displayType={'text'} \r\n                                thousandSeparator=\",\"\r\n                                value={earth.todayDeaths} \r\n                            /> \r\n                            <span>\r\n                                {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\r\n                                &nbsp;Deaths in the World Today\r\n                                {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\r\n                            </span>\r\n\r\n                            {/* <br /> */}\r\n\r\n                            {/* <NumberFormat displayType={'text'} \r\n                                displayType={'text'} thousandSeparator=\",\" \r\n                                decimalScale=\"2\"\r\n                                value={(earth.todayDeaths / earth.todayCases) * 100}\r\n                            /> */}\r\n\r\n                            {/* <span style={{ fontFamily: 'sans-serif', color: 'red', letterSpacing: '-.05rem', fontSize: '1rem', fontWeight: '800'}}>\r\n                                &nbsp;% chance you might die if you get covid\r\n                            </span>   */}\r\n\r\n                            {/* <NumberFormat displayType={'text'} \r\n                                thousandSeparator=\",\" \r\n                                value={earth.cases} \r\n                            />  */}\r\n                            {/* <span>\r\n                                &nbsp;&nbsp;\r\n                                &nbsp;Total Cases\r\n                                &nbsp;&nbsp;\r\n                            </span> */}\r\n\r\n                            {/* <NumberFormat displayType={'text'} \r\n                                thousandSeparator=\",\" \r\n                                value={earth.deaths} \r\n                            />  */}\r\n                            {/* <span>\r\n                                &nbsp;Total Deaths\r\n                                &nbsp;&nbsp;\r\n                            </span> */}\r\n                            \r\n                            <br />\r\n                            \r\n                            {/* <span style={{ fontFamily: 'sans-serif', color: 'green', letterSpacing: '.1rem', fontSize: '1rem', fontWeight: '600'}}\r\n                                >If you are an anti-vaxxer and/or anti-masker, then you're a Dumbass.\r\n                            </span> */}\r\n\r\n                        </p>           \r\n                        \r\n                                  \r\n                    </span>\r\n\r\n                    {/* <span style={{ color: 'red'}}>\r\n                        World Deaths                        \r\n                        <h4 style={{ color: 'blue'}}>\r\n                            <NumberFormat displayType={'text'} \r\n                                thousandSeparator=\",\" \r\n                                value={earth.deaths} \r\n                            />  <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                        </h4>                     \r\n                    </span> */}\r\n\r\n            \r\n                    </div>  \r\n                </>\r\n            )}\r\n        </Ticker>\r\n    )\r\n}\r\n \r\nexport default MoveStuffAround;","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\CountryDailies.js",["288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { CountryContext } from '../context/api'; \r\nimport NumberFormat from 'react-number-format';\r\nimport XChart from '././XChart';\r\nimport Moment from 'react-moment';\r\nimport CaseChart from './CaseChart';\r\n\r\nconst CountryDailies = ({ countryName }) => {\r\n    let num = 5;\r\n    const countryData = useContext(CountryContext);\r\n    const { getCountryDailies, countryDailiesLoading, countryDailiesError } = useContext(CountryContext);\r\n    const { getVaccinations, vaccinations, vaccinationsLoading, vaccinationsError} = useContext(CountryContext);\r\n\r\n    useEffect( () => {\r\n        getCountryDailies(countryName);\r\n    },[countryName]);\r\n\r\n    useEffect( () => {\r\n        getVaccinations(countryName);\r\n    },[countryName]);\r\n\r\n    const countryDailies = countryData.countryDailies;\r\n    const title = 'Timeline';\r\n    const caseTitle = 'Daily Cases';\r\n    const deathTitle = 'Daily Deaths';\r\n    const recoveredTitle = 'Daily Recovered';\r\n    let labels = [];\r\n    let caseData = [];\r\n    let deathData = [];\r\n    let recoveredData = [];\r\n\r\n    // chart data\r\n    const [chartLabels, setChartLabels] = useState([]);\r\n    const [chartCases, setChartCases] = useState([]);\r\n    const [chartDeaths, setChartDeaths] = useState([]);\r\n    const [chartRecovered, setChartRecovered] = useState([]);\r\n\r\n    const [lastXCases, setLastXCases] = useState([]);\r\n    const [lastXCasesSmoothed, setLastXCasesSmoothed] = useState([]);\r\n    const [lastXDates, setLastXDates] = useState([]);\r\n    const [lastXAves, setLastXAves] = useState([]);\r\n    const [lastXVacs, setLastXVacs] = useState([]);\r\n\r\n    const [yesterdayCases, setYesterdayCases] = useState(0);\r\n    const [threeDayCases, setThreeDayCases] = useState(0);\r\n    const [weekCases, setWeekCases] = useState(0);\r\n    const [twoWeekCases, setTwoWeekCases] = useState(0);\r\n    const [monthCases, setMonthCases] = useState(0);\r\n    const [twoMonthCases, setTwoMonthCases] = useState(0);\r\n    const [threeMonthCases, setThreeMonthCases] = useState(0);\r\n    const [allReportedCases, setAllReportedCases] = useState(0);\r\n\r\n    const [yesterdayDeaths, setYesterdayDeaths] = useState(0);\r\n    const [threeDayDeaths, setThreeDayDeaths] = useState(0);\r\n    const [weekDeaths, setWeekDeaths] = useState(0);\r\n    const [twoWeekDeaths, setTwoWeekDeaths] = useState(0);\r\n    const [monthDeaths, setMonthDeaths] = useState(0);\r\n    const [twoMonthDeaths, setTwoMonthDeaths] = useState(0);\r\n    const [threeMonthDeaths, setThreeMonthDeaths] = useState(0);\r\n    const [allReportedDeaths, setAllReportedDeaths] = useState(0);\r\n\r\n    const [highCases, setHighCases] = useState(0);\r\n    const [highCasesDate, setHighCasesDate] = useState(null);\r\n\r\n    const [highDeaths, setHighDeaths] = useState(0);\r\n    const [highDeathsDate, setHighDeathsDate] = useState(null);\r\n\r\n    // console.log('vaccinations', vaccinations);\r\n\r\n    useEffect( () => {\r\n        okComputer({countryDailies});\r\n    },[countryDailies]);\r\n\r\n    const tester = ({ countryDailies }) => {\r\n        if (!countryDailiesLoading && !countryDailiesError) {\r\n            const data = countryDailies;\r\n            // console.log('data', data[320][0], data[320][1]);\r\n        }\r\n    };\r\n\r\n    const okComputer = ({ countryDailies }) => {\r\n        if (!countryDailiesLoading && !countryDailiesError \r\n            && !vaccinationsLoading && !vaccinationsError) {\r\n\r\n            let listData = [];\r\n            let start = 0;\r\n            let end = countryDailies.length;\r\n\r\n            // timeline chart (all reported dates - f. Jan 22/20)\r\n            for (var i = start; i < end; i++) {  \r\n                labels.push(countryDailies[i][0]);    \r\n                caseData.push(countryDailies[i][1]);\r\n                recoveredData.push(countryDailies[i][2]);\r\n                deathData.push(countryDailies[i][3]);\r\n            }\r\n\r\n            setChartLabels(labels);\r\n            setChartCases(caseData);\r\n            setChartRecovered(recoveredData);\r\n            setChartDeaths(deathData);\r\n\r\n            // timeline chart 2 (last x reported dates) WITH WK av.\r\n            start = countryDailies.length - 1;\r\n            //  end = countryDailies.length - 61;\r\n\r\n            let offset = countryDailies.length - vaccinations[0].data.length;\r\n            // console.log('offset', offset);\r\n\r\n            // report from specific date >>\r\n            let dateStart = new Date('1 Jan 2021');\r\n            let currentDate = new Date();\r\n            let totalSeconds = (currentDate - dateStart) / 1000;\r\n            let totalDays = Math.ceil(totalSeconds / 3600 / 24);\r\n            end = countryDailies.length - totalDays;\r\n\r\n            let _lastXCases = [];\r\n            let _lastXCasesSmoothed = [];\r\n            let _lastXDates = [];\r\n            let _lastXAves = [];\r\n            let _lastXVacs = [];\r\n            setLastXVacs([]);\r\n            setLastXCasesSmoothed([]);\r\n\r\n            for (var i = start; i > end; i--) {  \r\n                _lastXDates.push(countryDailies[i][0]);    \r\n                _lastXCases.push(countryDailies[i][1] - countryDailies[i - 1][1]);  \r\n                _lastXAves.push(\r\n                    Math.ceil((countryDailies[i][1] - countryDailies[i - 7][1])\r\n                        / 7)\r\n                ); \r\n\r\n                _lastXVacs.push(vaccinations[0].data[i - offset]['new_vaccinations_smoothed_per_million']);\r\n                // 7-day avg\r\n                _lastXCasesSmoothed.push(Math.ceil(vaccinations[0].data[i - offset]['new_cases_smoothed_per_million']));\r\n            }\r\n\r\n            // console.log('cases', _lastXCasesSmoothed);\r\n\r\n            _lastXCases = _lastXCases.reverse();\r\n            _lastXCasesSmoothed = _lastXCasesSmoothed.reverse();\r\n            _lastXDates = _lastXDates.reverse();\r\n            _lastXAves = _lastXAves.reverse();\r\n            _lastXVacs = _lastXVacs.reverse();\r\n            setLastXCases(_lastXCases);\r\n            setLastXCasesSmoothed(_lastXCasesSmoothed);\r\n            setLastXDates(_lastXDates);\r\n            setLastXAves(_lastXAves);\r\n            setLastXVacs(_lastXVacs);\r\n\r\n            // CASE averages : last 3 days, 1 week, 2 weeks, months, twoMonths, threeMonths\r\n            start = countryDailies.length - 1;\r\n            end = 0;\r\n\r\n            let xTotal = 0;\r\n            let counter = 0;\r\n            let a = 3; let b = 7; let c = 14; let d = 30; let e = 60; let f= 90; \r\n            let g = countryDailies.length - 1;\r\n            let aa = 0; let bb = 0; let cc = 0; let dd = 0; let ee = 0; let ff = 0;\r\n            let gg = 0;\r\n            for(var i = start; i > end; i--) {\r\n                counter = counter + 1;\r\n                xTotal = xTotal + (countryDailies[i][1] - countryDailies[i - 1][1]);\r\n                if (counter === a){\r\n                    aa = Math.ceil(xTotal / a);\r\n                }\r\n                if (counter === b){\r\n                    bb = Math.ceil(xTotal / b);\r\n                }\r\n                if (counter === c){\r\n                    cc = Math.ceil(xTotal / c);\r\n                }\r\n                if (counter === d){\r\n                    dd = Math.ceil(xTotal / d);\r\n                }\r\n                if (counter === e){\r\n                    ee = Math.ceil(xTotal / e);\r\n                }\r\n                if (counter === f){\r\n                    ff = Math.ceil(xTotal / f);\r\n                }\r\n                if (counter === g){\r\n                    gg = Math.ceil(xTotal / g);\r\n                }\r\n            };\r\n\r\n            // DEATH averages : last 3 days, 1 week, 2 weeks, monthL\r\n            start = countryDailies.length - 1;\r\n            end = 0;\r\n            xTotal = 0;\r\n            counter = 0;\r\n\r\n            let w = 3; let x = 7; let y = 14; let z = 30; let az = 60; let bz = 90;\r\n            let cz = countryDailies.length - 1;\r\n            let ww = 0; let xx = 0; let yy = 0; let zz = 0; let azz = 0; let bzz = 0;\r\n            let czz = 0;\r\n            for(var i = start; i > end; i--) {\r\n                counter = counter + 1;\r\n                xTotal = xTotal + (countryDailies[i][3] - countryDailies[i - 1][3]);\r\n                if (counter === w){\r\n                    ww = Math.ceil(xTotal / w);\r\n                }\r\n                if (counter === x){\r\n                    xx = Math.ceil(xTotal / x);\r\n                }\r\n                if (counter === y){\r\n                    yy = Math.ceil(xTotal / y);\r\n                }\r\n                if (counter === z){\r\n                    zz = Math.ceil(xTotal / z);\r\n                }\r\n                if (counter === az){\r\n                    azz = Math.ceil(xTotal / az);\r\n                }\r\n                if (counter === bz){\r\n                    bzz = Math.ceil(xTotal / bz);\r\n                }\r\n                if (counter === cz){\r\n                    czz = Math.ceil(xTotal / cz);\r\n                }\r\n            };\r\n            // console.log('deaths', ww, xx, yy, zz);\r\n\r\n            setYesterdayCases(countryDailies[countryDailies.length - 1][1] \r\n                - countryDailies[countryDailies.length - 2][1]);\r\n            setThreeDayCases(aa);\r\n            setWeekCases(bb);\r\n            setTwoWeekCases(cc);\r\n            setMonthCases(dd);\r\n            setTwoMonthCases(ee);\r\n            setThreeMonthCases(ff);\r\n            setAllReportedCases(gg);\r\n\r\n            setYesterdayDeaths(countryDailies[countryDailies.length - 1][3] \r\n                - countryDailies[countryDailies.length - 2][3]);\r\n            setThreeDayDeaths(ww);\r\n            setWeekDeaths(xx);\r\n            setTwoWeekDeaths(yy);\r\n            setMonthDeaths(zz);    \r\n            setTwoMonthDeaths(azz);    \r\n            setThreeMonthDeaths(bzz);    \r\n            setAllReportedDeaths(czz);    \r\n            \r\n            //WORST DAYS - Cases & Deaths\r\n            var dailyHigh = 0;\r\n            var dailyHighDate;\r\n            var dailyDeath = 0;\r\n            var dailyDeathDate;\r\n            var highDataRow = [];\r\n            var highData = [];\r\n            start = 1; //must begin at 1 - will obtain first day by offsetting by 1\r\n            end = countryDailies.length;\r\n\r\n            for (var i = start; i < end; i++) {    \r\n                if ( ( countryDailies[i][1] - countryDailies[i - 1][1]) * 1\r\n                            > dailyHigh) {\r\n                  dailyHigh = ( countryDailies[i][1] - countryDailies[i - 1][1]) * 1;\r\n                  dailyHighDate = countryDailies[i][0];\r\n                };\r\n\r\n                if ( ( countryDailies[i][3] - countryDailies[i - 1][3]) * 1\r\n                            > dailyDeath) {\r\n                  dailyDeath = ( countryDailies[i][3] - countryDailies[i - 1][3]) * 1;\r\n                  dailyDeathDate = countryDailies[i][0];\r\n                };\r\n    \r\n                listData.push(d);\r\n            };\r\n\r\n            setHighCases(dailyHigh);\r\n            setHighCasesDate(dailyHighDate);\r\n            setHighDeaths(dailyDeath);\r\n            setHighDeathsDate(dailyDeathDate);\r\n\r\n        };\r\n    };  \r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h5>Daily Cases</h5>\r\n                <p className='small-text'>Click on the chart labels to show/hide the corresponding data.</p>\r\n\r\n                <CaseChart \r\n                    title={'Daily Cases'}\r\n\r\n                    // labels={['Past 2 Months (ave/day)', \r\n                    //         'Past Month (ave/day)', 'Past Week (ave/day)', \r\n                    //     'Past 3 days (ave/day)', 'Yesterday']}\r\n                    labels = {lastXDates}\r\n                    caseData={\r\n                        [   twoMonthCases,\r\n                            monthCases,\r\n                            weekCases,\r\n                            threeDayCases,\r\n                            yesterdayCases\r\n                        ]                 \r\n                    }\r\n                    \r\n                    lastXCases={lastXCases}\r\n                    lastXCasesSmoothed={lastXCasesSmoothed}\r\n                    lastXAves={lastXAves}\r\n                    lastXVacs={lastXVacs}\r\n                    // deathData={\r\n                    //     [ monthDeaths,\r\n                    //         weekDeaths,\r\n                    //         threeDayDeaths,\r\n                    //         yesterdayDeaths\r\n                    //     ]                 \r\n                    // }\r\n                />\r\n            </div>\r\n\r\n            {/* <hr></hr> */}\r\n            <h1></h1>\r\n            {/* <div className='container'>  */}\r\n            <div className=\"container\">                    \r\n                <h5>Cases &amp; Deaths</h5>\r\n                {/* <h5>The Numbers</h5> */}\r\n                    <table className=\"table table-striped table-hover table-custom\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Cases</th>\r\n                                <th>Deaths</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td><h6>Yesterday</h6></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={yesterdayCases} /></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={yesterdayDeaths} /></td>\r\n                            </tr>\r\n                            {/* <tr>\r\n                                <td><h6>past 3 days (avg/day)</h6></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={threeDayCases} /></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={threeDayDeaths} /></td>\r\n                            </tr> */}\r\n                            <tr>\r\n                                <td><h6>past week (avg/day)</h6></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={weekCases} /></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={weekDeaths} /></td>\r\n                            </tr>\r\n                            {/* <tr>\r\n                                <td><h6>past 2 weeks (avg/day)</h6></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={twoWeekCases} /></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={twoWeekDeaths} /></td>\r\n                            </tr> */}\r\n                            <tr>\r\n                                <td><h6>past 30 days (avg/day)</h6></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={monthCases} /></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={monthDeaths} /></td>\r\n                            </tr>\r\n                            {/* <tr>\r\n                                <td><h6>past 60 days (avg/day)</h6></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={twoMonthCases} /></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={twoMonthDeaths} /></td>\r\n                            </tr> */}\r\n                            {/* <tr>\r\n                                <td><h6>past 90 days (avg/day)</h6></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={threeMonthCases} /></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={threeMonthDeaths} /></td>\r\n                            </tr> */}\r\n                            <tr>\r\n                                <td><h6>all reported (avg/day)</h6></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={allReportedCases} /></td>\r\n                                <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={allReportedDeaths} /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n            </div>\r\n\r\n            <p></p>\r\n\r\n            <div className='container'>\r\n                <h5>Worst Days</h5>\r\n                <table className='table table-custom'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Cases</td>\r\n                            <td>\r\n                                <Moment format=\"MMMM D YYYY\">\r\n                                    {highCasesDate}\r\n                                </Moment>\r\n                            </td>\r\n                            <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={highCases} /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Deaths</td>\r\n                            <td>\r\n                                <Moment format=\"MMMM D YYYY\">\r\n                                    {highDeathsDate}\r\n                                </Moment>\r\n                            </td>\r\n                            <td><NumberFormat displayType={'text'} thousandSeparator=\",\" value={highDeaths} /></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <XChart title={title}\r\n                    labels={chartLabels} \r\n                    caseTitle={caseTitle}\r\n                    caseData={chartCases} \r\n                    deathTitle={deathTitle}\r\n                    deathData={chartDeaths}\r\n                    recoveredTitle={recoveredTitle}\r\n                    recoveredData={chartRecovered}\r\n            />  \r\n        \r\n        </>\r\n    )\r\n};\r\n\r\nexport default CountryDailies;","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\CaseTrend.js",[],"C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\XChart.js",["307"],"import React from 'react'\r\nimport { Bar, Line, defaults } from 'react-chartjs-2'\r\n\r\ndefaults.global.tooltips.enabled = true;\r\ndefaults.global.legend.position = 'top';\r\n\r\nconst XChart = ({   title, labels, \r\n                    caseTitle, caseData, \r\n                    deathTitle, deathData, \r\n                    recoveredTitle, recoveredData }) => {\r\n\r\n    // console.log(title);\r\n    // console.log('labels', labels);\r\n    // console.log('caseTitle', caseTitle);\r\n    // console.log('caseData', caseData);\r\n    // console.log('deathTitle', deathTitle);\r\n    // console.log('deathData', deathData);\r\n    // console.log('recoveredTitle', recoveredTitle);\r\n    // console.log('recoveredData', recoveredData);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <p></p>\r\n            <h4>{title}</h4>\r\n            <p className='small-text'>Click on the chart labels to show/hide the corresponding data.</p>\r\n            <Line\r\n                data={{\r\n                        labels: labels,\r\n                        datasets:[\r\n                        {\r\n                            label: caseTitle,\r\n                            data: caseData, \r\n                            backgroundColor: [\r\n                                'rgba(125, 181, 132, .5)',\r\n                            ],                           \r\n                        },\r\n                        {\r\n                            label: deathTitle,\r\n                            data: deathData, \r\n                            backgroundColor: [\r\n                                'rgba(54, 162, 235, 1)',\r\n                            ],                           \r\n                        },  \r\n                        // {\r\n                        //     label: recoveredTitle,\r\n                        //     data: recoveredData, \r\n                        //     backgroundColor: [\r\n                        //         'rgba(255, 226, 86, 0.6)',\r\n                        //     ],                           \r\n                        // },                         \r\n                    ],\r\n                }}\r\n                height={200}\r\n                width={300}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        yAxes: [\r\n                            {\r\n                                ticks: {\r\n                                    beginAtZero: true,\r\n                                }\r\n                            }\r\n                        ]\r\n                    }, \r\n                    legend: {\r\n                        labels: {\r\n                            fontSize: 16,\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n\r\n{/* START HERE */}\r\n\r\n\r\n            {/* <Bar\r\n                data={{\r\n                        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                        datasets:[\r\n                        {\r\n                            label: '# of Votes',\r\n                            data: [12, 19, 3, 5, 2, 3],\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 0.2)',\r\n                                'rgba(54, 162, 235, 0.2)',\r\n                                'rgba(255, 206, 86, 0.2)',\r\n                                'rgba(75, 192, 192, 0.2)',\r\n                                'rgba(153, 102, 255, 0.2)',\r\n                                'rgba(255, 159, 64, 0.2)'\r\n                            ],\r\n                            borderColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                                'rgba(153, 102, 255, 1)',\r\n                                'rgba(255, 159, 64, 1)'\r\n                            ],\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                }}\r\n                height={400}\r\n                width={600}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        yAxes: [\r\n                            {\r\n                                ticks: {\r\n                                    beginAtZero: true,\r\n                                }\r\n                            }\r\n                        ]\r\n                    }, \r\n                    legend: {\r\n                        labels: {\r\n                            fontSize: 16,\r\n                        }\r\n                    }\r\n                }}\r\n            /> */}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default XChart;","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\pages\\Home.js",["308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327"],"import React, { useContext, useEffect } from 'react';\r\nimport { UserContext, EarthContext, AllContext, CountryContext, StatsContext } from '../context/api'; \r\nimport { useHistory }  from 'react-router-dom';\r\nimport CountryTotals from '../components/CountryTotals';\r\nimport CountryDailies from '../components/CountryDailies';\r\n\r\nconst Home = () => {\r\n    const { countryList, getCountryTotals, countryTotals,\r\n        countryTotalsLoading, countryTotalsError,\r\n        getCountryDailies, countryDailiesLoading, countryDailiesError,\r\n        getCountryInfo, countryInfo, countryInfoLoading, countryInfoError,\r\n        getWhosBad, whosBad } = useContext(CountryContext);\r\n    const { getEarth, earth, earthLoading, earthError } = useContext(EarthContext);\r\n    const { getUserGeolocationDetails, country, userDetails, userLoading, userError } = useContext(UserContext);\r\n\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getUserGeolocationDetails();\r\n    },[]);\r\n\r\n    useEffect( () => {\r\n        getEarth();\r\n    },[]);\r\n    \r\n    useEffect( () => {\r\n        getWhosBad();\r\n    },[]);\r\n\r\n    const handleSelect=(e)=>{\r\n        if (e) {\r\n          if (e === 'all') {\r\n            return (\r\n                history.push('/earth')\r\n              )\r\n            } else {\r\n              getCountryTotals(e);\r\n              getCountryDailies(e);\r\n              if (e === 'US') {\r\n                getCountryInfo('USA');\r\n              } else {\r\n                getCountryInfo(e);\r\n              }\r\n    \r\n              return (\r\n                <>\r\n                  <CountryTotals countryName={e} />\r\n                  <CountryDailies countryName={e} />\r\n                </>\r\n                )\r\n            }\r\n        };\r\n      };\r\n\r\n    if (userError) {\r\n        return (\r\n            <div className='container'>\r\n                <h4>Ooops! Something went wrong!</h4>\r\n                <h6>Try Refreshing the Page</h6>\r\n            </div>\r\n        )\r\n    };\r\n  \r\n    if (userLoading) {\r\n      return (\r\n        <div className='container'>\r\n          <h4>Hold On!</h4>\r\n          <h6>I am crunching a boat-load of data ...</h6>\r\n        </div>\r\n      )\r\n    };\r\n\r\n    const onClick = () => {\r\n        alert('Yeah you clicked. Good for you');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='container-fluid'>\r\n                <h1>\r\n                    Looks like you are from {!userLoading && <strong>{country}</strong>}\r\n                </h1>\r\n                <ul>\r\n                    <li>Show me some numbers</li>\r\n                    <li>What's happening somewhere else?\r\n                        <input type=\"text\" id=\"country\" defaultValue={country}></input>\r\n                        <button onClick={onClick} type='button'>Go there</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Home;","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\DeathTrend.js",[],"C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\Today.js",[],"C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\CountryVacs.js",["328"],"import React from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst CountryVacs = ({  location, \r\n                        new_cases, \r\n                        people_fully_vaccinated, people_fully_vaccinated_per_hundred,\r\n                        people_vaccinated, \r\n                        people_vaccinated_per_hundred,\r\n                        new_vaccinations }) => {\r\n\r\n    // if (people_fully_vaccinated === undefined) people_fully_vaccinated = 0;\r\n    // if (people_fully_vaccinated_per_hundred === undefined) people_fully_vaccinated_per_hundred = 0;\r\n    // if (people_vaccinated === undefined) people_vaccinated = 0;\r\n    // if (people_vaccinated_per_hundred === undefined) people_vaccinated_per_hundred = 0;\r\n\r\n    return (\r\n        <>\r\n           <div className=\"container\">\r\n           <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"card-vaccinations-yesterday\">\r\n                            <div className=\"card-vaccinations-body\">\r\n                                <h6 style={{ color: '#0f0f0f' }} className=\"card-title\">Vaccinated Yesterday</h6>\r\n                                { \r\n                                    new_vaccinations !== undefined ? \r\n                                    <>\r\n                                        \r\n                                        <h5 className=\"\">\r\n                                            <em><NumberFormat  style={{ color: '#203040', fontWeight: 600 }} displayType={'text'}        displayType={'text'} thousandSeparator=\",\"\r\n                                                value={new_vaccinations} /></em>\r\n                                        </h5>\r\n                                       \r\n                                </> : <><small>No Data Available at the moment</small></>}\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"card-vaccinations\">\r\n                            <div className=\"card-vaccinations-body\">\r\n                                <h6 style={{ color: '#f8f8f8' }} className=\"card-title\">Vaccinated</h6>\r\n                                { \r\n                                    people_vaccinated !== undefined ? \r\n                                    <>\r\n                                        \r\n                                        <h4 className=\"card-vaccinations-text\">\r\n                                            <NumberFormat  style={{ color: '#e6e6e6' }} displayType={'text'}        decimalSeparator=\".\" decimalScale=\"2\"\r\n                                                value={people_vaccinated_per_hundred} />%\r\n                                        </h4>\r\n                                        <p className=\"card-vaccinations-text-p\">\r\n                                            <em>(<NumberFormat\r\n                                                displayType={'text'} thousandSeparator=\",\" value={people_vaccinated} />)</em>\r\n                                        </p>\r\n                                </> : <><small>No Data Available at the moment</small></>}\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"card-vaccinations\">\r\n                            <div className=\"card-vaccinations-body\">\r\n                                <h6  style={{ color: '#f8f8f8' }} className=\"card-title\">Fully Vaccinated</h6>\r\n                                { \r\n                                    people_fully_vaccinated !== undefined ? <>\r\n                                        \r\n                                        <h4 className=\"card-vaccinations-text\"><NumberFormat  style={{ color: '#e6e6e6' }} displayType={'text'} decimalSeparator=\".\" decimalScale=\"2\"\r\n                                                value={people_fully_vaccinated_per_hundred} />%</h4>\r\n                                        <p className=\"card-vaccinations-text-p\">\r\n                                            <em>(<NumberFormat displayType={'text'} thousandSeparator=\",\" value={people_fully_vaccinated} />)</em>\r\n                                        </p>\r\n                                </> : <><small>No Data Available at the moment</small></>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CountryVacs;\r\n","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\DailyVacs.js",["329","330","331"],"import React, { useContext, useState } from 'react'\r\nimport NumberFormat from 'react-number-format';\r\nimport { CountryContext, EarthContext } from '../context/api';\r\n\r\nconst DailyVacs = ({num}) => {\r\n    const { owid } = useContext(EarthContext);\r\n    const { countryInfo } = useContext(CountryContext);\r\n\r\n    const _name  = countryInfo[0].name;\r\n    let _num = num;\r\n    // NOTE: All per millionLION\r\n    let vacs = [];      \r\n    let tests = [];\r\n    let hosp = [];\r\n    let cases = [];     \r\n    let deaths = [];    \r\n\r\n    // console.log(owid);\r\n\r\n    let currentDate = new Date();\r\n    let _yesterday = currentDate - 86400000;\r\n    let yesterday = new Date(_yesterday);\r\n    // See note below: getDate() returns correct date (day of month) here, but not from below ???\r\n\r\n    owid.forEach((x) => {\r\n        let _vacs = []; \r\n        let _tests = []; \r\n        let _hosp = []; \r\n        let _cases = [];\r\n        let _deaths = [];\r\n\r\n        let xDate = new Date(x.data[x.data.length-1].date)\r\n        // *** ODD!! getDate() returns date - 1 day, for the xDate found!!!! WTF??? So, will add one ... ***\r\n\r\n        if (x.data[x.data.length-1].new_vaccinations_smoothed_per_million !== undefined \r\n            && x.name.substring(0,4) !== \"OWID\" \r\n                && xDate.getMonth().toString() + (xDate.getDate() + 1).toString() === \r\n                    yesterday.getMonth().toString() + yesterday.getDate().toString()\r\n                ) {\r\n\r\n                    _vacs.push(x.location, \r\n                        x.data[x.data.length-1].new_vaccinations_smoothed_per_million,\r\n                        x.data[x.data.length-1].date, );\r\n        };\r\n        if (_vacs.length > 0) {\r\n            vacs.push(_vacs);\r\n        };\r\n\r\n        if (x.data[x.data.length-1].new_tests_smoothed_per_thousand !== undefined \r\n            && x.name.substring(0,4) !== \"OWID\" \r\n                && xDate.getMonth().toString() + (xDate.getDate() + 1).toString() === \r\n                    yesterday.getMonth().toString() + yesterday.getDate().toString()\r\n                ) {\r\n\r\n                    _tests.push(x.location, \r\n                        x.data[x.data.length-1].new_tests_smoothed_per_thousand,\r\n                        x.data[x.data.length-1].date, );\r\n        };\r\n        if (_tests.length > 0) {\r\n            tests.push(_tests);\r\n        };\r\n\r\n        if (x.data[x.data.length-1].hosp_patients_per_million !== undefined \r\n            && x.name.substring(0,4) !== \"OWID\" \r\n                && xDate.getMonth().toString() + (xDate.getDate() + 1).toString() === \r\n                    yesterday.getMonth().toString() + yesterday.getDate().toString()\r\n                ) {\r\n                    \r\n                    _hosp.push(x.location, \r\n                        x.data[x.data.length-1].hosp_patients_per_million,\r\n                        x.data[x.data.length-1].date, );\r\n        };\r\n        if (_hosp.length > 0) {\r\n            hosp.push(_hosp);\r\n        };\r\n\r\n        if (x.data[x.data.length-1].total_cases_per_million !== undefined \r\n            && x.name.substring(0,4) !== \"OWID\" \r\n                && xDate.getMonth().toString() + (xDate.getDate() + 1).toString() === \r\n                    yesterday.getMonth().toString() + yesterday.getDate().toString()\r\n                ) {\r\n                    \r\n                    _cases.push(x.location, \r\n                        Math.ceil(x.data[x.data.length-1].total_cases_per_million),\r\n                        x.data[x.data.length-1].date, );\r\n        };\r\n        if (_cases.length > 0) {\r\n            cases.push(_cases);\r\n        };\r\n\r\n        if (x.data[x.data.length-1].total_deaths_per_million !== undefined \r\n            && x.name.substring(0,4) !== \"OWID\" \r\n                && xDate.getMonth().toString() + (xDate.getDate() + 1).toString() === \r\n                    yesterday.getMonth().toString() + yesterday.getDate().toString()\r\n                ) {\r\n                    \r\n                    _deaths.push(x.location, \r\n                        Math.ceil(x.data[x.data.length-1].total_deaths_per_million),\r\n                        x.data[x.data.length-1].date, );\r\n        };\r\n        if (_deaths.length > 0) {\r\n            deaths.push(_deaths);\r\n        };\r\n    });\r\n\r\n    let topVacs = vacs.sort(function(a, b) {\r\n        return a[1] - b[1] }).reverse().slice(0, _num);\r\n\r\n    // No info for Sat June 18th - SAT    \r\n    let topTests = tests.sort(function(a, b) {\r\n        return a[1] - b[1] }).reverse().slice(0, _num);\r\n    // console.log('topTests', topTests);\r\n\r\n    let topHosp = hosp.sort(function(a, b) {\r\n        return a[1] - b[1] }).reverse().slice(0, _num);\r\n    // console.log('topHosp', topHosp);\r\n\r\n    let topCases = cases.sort(function(a, b) {\r\n        return a[1] - b[1] }).reverse().slice(0, _num);\r\n    // console.log('topCases', topCases);\r\n\r\n    let topDeaths = deaths.sort(function(a, b) {\r\n        return a[1] - b[1] }).reverse().slice(0, _num);\r\n    // console.log('topDeaths', topDeaths);\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"row\">  \r\n                <div className=\"col-sm-4\">      \r\n                    <ul className='stats-list'> \r\n                        <h5>Vaccination Rate</h5>\r\n                        <h6>(New Vacs per million)</h6> \r\n                        {/* <small>Yesterday's reported numbers</small>   */}\r\n                        { topVacs.map( (country, index) => {\r\n                            return (\r\n                                <li title=\"Vac Rate\" key={country[0]}>\r\n                                    <small>{index+1}</small> \r\n                                    {/* <strong>{country[0]}</strong>  */}\r\n                                    { country[0] === _name ?\r\n                                        <strong \r\n                                            style={{color:'red', \r\n                                            fontWeight: '800',\r\n                                            fontSize: '1.25rem'}}>{country[0]}</strong> \r\n                                    :  <strong>{country[0]}</strong> \r\n                                    }\r\n\r\n                                    <em><NumberFormat \r\n                                        value={country[1]} \r\n                                        displayType={'text'} thousandSeparator=\",\" \r\n                                        decimalScale=\"2\"\r\n                                    /></em>\r\n                                </li> )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"col-sm-4\">      \r\n                    <ul className='stats-list'> \r\n                        <h5>Case Rate</h5>\r\n                        <h6>(Total Cases per million)</h6> \r\n                        {/* <small>Yesterday's reported numbers</small>   */}\r\n                        { topCases.map( (country, index) => {\r\n                            return (\r\n                                <li title=\"Case Rate\" key={country[0]}>\r\n                                    <small>{index+1}</small> \r\n                                    {/* <strong>{country[0]}</strong>  */}\r\n                                    { country[0] === _name ?\r\n                                        <strong \r\n                                            style={{color:'red', \r\n                                            fontWeight: '800',\r\n                                            fontSize: '1.25rem'}}>{country[0]}</strong> \r\n                                    :  <strong>{country[0]}</strong> \r\n                                    }\r\n                                    <em><NumberFormat \r\n                                        value={country[1]} \r\n                                        displayType={'text'} thousandSeparator=\",\" \r\n                                        decimalScale=\"2\"\r\n                                    /></em>\r\n                                </li> )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"col-sm-4\">      \r\n                    <ul className='stats-list'> \r\n                        <h5>Death Rate</h5>\r\n                        <h6>(Total Deaths per million)</h6> \r\n                        { topDeaths.map( (country, index) => {\r\n                            return (\r\n                                <li title=\"Death Rate\" key={country[0]}>\r\n                                    <small>{index+1}</small> \r\n                                    { country[0] === _name ?\r\n                                        <strong \r\n                                            style={{color:'red', \r\n                                            fontWeight: '800',\r\n                                            fontSize: '1.25rem'}}>{country[0]}</strong> \r\n                                    :  <strong>{country[0]}</strong> \r\n                                    }\r\n                                    <em><NumberFormat \r\n                                        value={country[1]} \r\n                                        displayType={'text'} thousandSeparator=\",\" \r\n                                        decimalScale=\"2\"\r\n                                    /></em>\r\n                                </li> )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DailyVacs\r\n",["332","333"],"C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\pages\\Stats.js",["334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361"],"import React, { useEffect, useContext } from 'react';\r\nimport Footer from '../components/Footer';\r\nimport { CountryContext, UserContext, EarthContext } from '../context/api';\r\nimport Dashboard from '../components/Dashboard';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst Stats = () => {\r\n  const { countryList, getCountryTotals, countryTotals,\r\n          countryTotalsLoading, countryTotalsError,\r\n          getCountryDailies, countryDailiesLoading, countryDailiesError,\r\n          getCountryInfo, countryInfo, countryInfoLoading, countryInfoError,\r\n          getWhosBad, whosBad } = useContext(CountryContext);\r\n  const { getEarth, earth, earthLoading, earthError, \r\n          getOwid, owid, owidLoading, owidError } = useContext(EarthContext);\r\n  const { getUserGeolocationDetails, country, userDetails, userLoading, userError } = useContext(UserContext);\r\n\r\n  let num = 0;\r\n\r\n  return (\r\n    <>\r\n      <Dashboard num={num} />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stats;","C:\\Users\\USER\\source\\repos\\React\\googster-V4\\src\\components\\Banner.js",[],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\index.js",[],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\App.js",["362"],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\context\\api.js",["363","364","365","366","367"],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\pages\\Splash.js",["368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385"],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\pages\\Earth.js",[],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\pages\\Stats.js",["386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413"],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\pages\\Error.js",[],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\pages\\Home.js",["414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433"],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\helpers\\Constants.js",[],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\CountryTotals.js",["434","435","436","437","438","439","440","441","442","443","444","445","446"],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\Footer.js",[],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\Dashboard.js",["447","448","449","450","451","452"],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\CountryDailies.js",["453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471"],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\Banner.js",[],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\Today.js",[],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\TickerSample.js",["472","473","474"],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\Countries.js",["475","476"],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\DeathTrend.js",[],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\CaseTrend.js",[],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\CountryVacs.js",["477"],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\DailyVacs.js",["478","479","480"],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\XChart.js",["481"],"C:\\Users\\USER\\source\\repos\\React\\CovidTracker\\src\\components\\CaseChart.js",["482"],{"ruleId":"483","replacedBy":"484"},{"ruleId":"485","replacedBy":"486"},{"ruleId":"487","severity":1,"message":"488","line":1,"column":17,"nodeType":"489","messageId":"490","endLine":1,"endColumn":25},{"ruleId":"487","severity":1,"message":"491","line":3,"column":40,"nodeType":"489","messageId":"490","endLine":3,"endColumn":46},{"ruleId":"487","severity":1,"message":"492","line":51,"column":21,"nodeType":"489","messageId":"490","endLine":51,"endColumn":32},{"ruleId":"487","severity":1,"message":"493","line":55,"column":30,"nodeType":"489","messageId":"490","endLine":55,"endColumn":50},{"ruleId":"487","severity":1,"message":"494","line":61,"column":11,"nodeType":"489","messageId":"490","endLine":61,"endColumn":29},{"ruleId":"487","severity":1,"message":"495","line":61,"column":31,"nodeType":"489","messageId":"490","endLine":61,"endColumn":53},{"ruleId":"487","severity":1,"message":"496","line":15,"column":8,"nodeType":"489","messageId":"490","endLine":15,"endColumn":14},{"ruleId":"487","severity":1,"message":"497","line":19,"column":11,"nodeType":"489","messageId":"490","endLine":19,"endColumn":31},{"ruleId":"487","severity":1,"message":"498","line":19,"column":33,"nodeType":"489","messageId":"490","endLine":19,"endColumn":51},{"ruleId":"487","severity":1,"message":"499","line":20,"column":30,"nodeType":"489","messageId":"490","endLine":20,"endColumn":51},{"ruleId":"487","severity":1,"message":"500","line":20,"column":53,"nodeType":"489","messageId":"490","endLine":20,"endColumn":72},{"ruleId":"487","severity":1,"message":"501","line":21,"column":60,"nodeType":"489","messageId":"490","endLine":21,"endColumn":76},{"ruleId":"487","severity":1,"message":"502","line":22,"column":23,"nodeType":"489","messageId":"490","endLine":22,"endColumn":30},{"ruleId":"487","severity":1,"message":"503","line":23,"column":21,"nodeType":"489","messageId":"490","endLine":23,"endColumn":26},{"ruleId":"487","severity":1,"message":"504","line":23,"column":28,"nodeType":"489","messageId":"490","endLine":23,"endColumn":40},{"ruleId":"487","severity":1,"message":"505","line":23,"column":42,"nodeType":"489","messageId":"490","endLine":23,"endColumn":52},{"ruleId":"487","severity":1,"message":"506","line":24,"column":20,"nodeType":"489","messageId":"490","endLine":24,"endColumn":24},{"ruleId":"487","severity":1,"message":"507","line":24,"column":39,"nodeType":"489","messageId":"490","endLine":24,"endColumn":48},{"ruleId":"487","severity":1,"message":"508","line":25,"column":47,"nodeType":"489","messageId":"490","endLine":25,"endColumn":58},{"ruleId":"509","severity":1,"message":"510","line":70,"column":5,"nodeType":"511","endLine":70,"endColumn":7,"suggestions":"512"},{"ruleId":"509","severity":1,"message":"513","line":75,"column":5,"nodeType":"511","endLine":75,"endColumn":14,"suggestions":"514"},{"ruleId":"509","severity":1,"message":"515","line":79,"column":5,"nodeType":"511","endLine":79,"endColumn":7,"suggestions":"516"},{"ruleId":"509","severity":1,"message":"517","line":83,"column":5,"nodeType":"511","endLine":83,"endColumn":7,"suggestions":"518"},{"ruleId":"509","severity":1,"message":"519","line":87,"column":5,"nodeType":"511","endLine":87,"endColumn":7,"suggestions":"520"},{"ruleId":"487","severity":1,"message":"488","line":1,"column":40,"nodeType":"489","messageId":"490","endLine":1,"endColumn":48},{"ruleId":"487","severity":1,"message":"521","line":12,"column":13,"nodeType":"489","messageId":"490","endLine":12,"endColumn":18},{"ruleId":"487","severity":1,"message":"522","line":13,"column":65,"nodeType":"489","messageId":"490","endLine":13,"endColumn":82},{"ruleId":"509","severity":1,"message":"523","line":17,"column":7,"nodeType":"511","endLine":17,"endColumn":20,"suggestions":"524"},{"ruleId":"487","severity":1,"message":"525","line":21,"column":13,"nodeType":"489","messageId":"490","endLine":21,"endColumn":18},{"ruleId":"487","severity":1,"message":"526","line":21,"column":20,"nodeType":"489","messageId":"490","endLine":21,"endColumn":30},{"ruleId":"487","severity":1,"message":"527","line":21,"column":32,"nodeType":"489","messageId":"490","endLine":21,"endColumn":38},{"ruleId":"487","severity":1,"message":"528","line":22,"column":13,"nodeType":"489","messageId":"490","endLine":22,"endColumn":24},{"ruleId":"487","severity":1,"message":"529","line":23,"column":13,"nodeType":"489","messageId":"490","endLine":23,"endColumn":29},{"ruleId":"487","severity":1,"message":"530","line":23,"column":31,"nodeType":"489","messageId":"490","endLine":23,"endColumn":48},{"ruleId":"509","severity":1,"message":"531","line":28,"column":7,"nodeType":"511","endLine":28,"endColumn":16,"suggestions":"532"},{"ruleId":"509","severity":1,"message":"533","line":32,"column":7,"nodeType":"511","endLine":32,"endColumn":16,"suggestions":"534"},{"ruleId":"535","severity":1,"message":"536","line":57,"column":17,"nodeType":"537","endLine":57,"endColumn":32},{"ruleId":"487","severity":1,"message":"538","line":4,"column":10,"nodeType":"489","messageId":"490","endLine":4,"endColumn":29},{"ruleId":"487","severity":1,"message":"539","line":7,"column":11,"nodeType":"489","messageId":"490","endLine":7,"endColumn":22},{"ruleId":"487","severity":1,"message":"540","line":8,"column":34,"nodeType":"489","messageId":"490","endLine":8,"endColumn":48},{"ruleId":"487","severity":1,"message":"541","line":8,"column":50,"nodeType":"489","messageId":"490","endLine":8,"endColumn":62},{"ruleId":"487","severity":1,"message":"542","line":15,"column":12,"nodeType":"489","messageId":"490","endLine":15,"endColumn":21},{"ruleId":"487","severity":1,"message":"543","line":15,"column":23,"nodeType":"489","messageId":"490","endLine":15,"endColumn":35},{"ruleId":"487","severity":1,"message":"544","line":16,"column":12,"nodeType":"489","messageId":"490","endLine":16,"endColumn":25},{"ruleId":"487","severity":1,"message":"545","line":16,"column":27,"nodeType":"489","messageId":"490","endLine":16,"endColumn":43},{"ruleId":"487","severity":1,"message":"546","line":18,"column":12,"nodeType":"489","messageId":"490","endLine":18,"endColumn":22},{"ruleId":"487","severity":1,"message":"547","line":18,"column":24,"nodeType":"489","messageId":"490","endLine":18,"endColumn":37},{"ruleId":"487","severity":1,"message":"548","line":19,"column":12,"nodeType":"489","messageId":"490","endLine":19,"endColumn":26},{"ruleId":"487","severity":1,"message":"549","line":19,"column":28,"nodeType":"489","messageId":"490","endLine":19,"endColumn":45},{"ruleId":"509","severity":1,"message":"517","line":21,"column":41,"nodeType":"511","endLine":21,"endColumn":43,"suggestions":"550"},{"ruleId":"487","severity":1,"message":"551","line":36,"column":13,"nodeType":"489","messageId":"490","endLine":36,"endColumn":24},{"ruleId":"487","severity":1,"message":"552","line":41,"column":13,"nodeType":"489","messageId":"490","endLine":41,"endColumn":22},{"ruleId":"487","severity":1,"message":"553","line":48,"column":14,"nodeType":"489","messageId":"490","endLine":48,"endColumn":23},{"ruleId":"487","severity":1,"message":"554","line":49,"column":14,"nodeType":"489","messageId":"490","endLine":49,"endColumn":27},{"ruleId":"487","severity":1,"message":"555","line":50,"column":14,"nodeType":"489","messageId":"490","endLine":50,"endColumn":24},{"ruleId":"487","severity":1,"message":"556","line":51,"column":14,"nodeType":"489","messageId":"490","endLine":51,"endColumn":28},{"ruleId":"487","severity":1,"message":"557","line":52,"column":14,"nodeType":"489","messageId":"490","endLine":52,"endColumn":25},{"ruleId":"487","severity":1,"message":"558","line":53,"column":14,"nodeType":"489","messageId":"490","endLine":53,"endColumn":22},{"ruleId":"487","severity":1,"message":"559","line":54,"column":14,"nodeType":"489","messageId":"490","endLine":54,"endColumn":19},{"ruleId":"535","severity":1,"message":"536","line":186,"column":53,"nodeType":"537","endLine":186,"endColumn":68},{"ruleId":"535","severity":1,"message":"536","line":215,"column":53,"nodeType":"537","endLine":215,"endColumn":68},{"ruleId":"535","severity":1,"message":"536","line":244,"column":53,"nodeType":"537","endLine":244,"endColumn":68},{"ruleId":"535","severity":1,"message":"536","line":271,"column":53,"nodeType":"537","endLine":271,"endColumn":68},{"ruleId":"535","severity":1,"message":"536","line":298,"column":53,"nodeType":"537","endLine":298,"endColumn":68},{"ruleId":"560","severity":1,"message":"561","line":12,"column":13,"nodeType":"562","messageId":"563","endLine":12,"endColumn":15},{"ruleId":"487","severity":1,"message":"564","line":20,"column":11,"nodeType":"489","messageId":"490","endLine":20,"endColumn":18},{"ruleId":"487","severity":1,"message":"565","line":36,"column":9,"nodeType":"489","messageId":"490","endLine":36,"endColumn":23},{"ruleId":"487","severity":1,"message":"566","line":41,"column":9,"nodeType":"489","messageId":"490","endLine":41,"endColumn":23},{"ruleId":"487","severity":1,"message":"567","line":57,"column":10,"nodeType":"489","messageId":"490","endLine":57,"endColumn":23},{"ruleId":"487","severity":1,"message":"568","line":92,"column":34,"nodeType":"489","messageId":"490","endLine":92,"endColumn":38},{"ruleId":"487","severity":1,"message":"569","line":2,"column":10,"nodeType":"489","messageId":"490","endLine":2,"endColumn":13},{"ruleId":"509","severity":1,"message":"570","line":15,"column":8,"nodeType":"511","endLine":15,"endColumn":10,"suggestions":"571"},{"ruleId":"487","severity":1,"message":"572","line":43,"column":57,"nodeType":"489","messageId":"490","endLine":43,"endColumn":66},{"ruleId":"487","severity":1,"message":"573","line":8,"column":13,"nodeType":"489","messageId":"490","endLine":8,"endColumn":21},{"ruleId":"487","severity":1,"message":"504","line":8,"column":30,"nodeType":"489","messageId":"490","endLine":8,"endColumn":42},{"ruleId":"487","severity":1,"message":"505","line":8,"column":44,"nodeType":"489","messageId":"490","endLine":8,"endColumn":54},{"ruleId":"487","severity":1,"message":"574","line":9,"column":9,"nodeType":"489","messageId":"490","endLine":9,"endColumn":12},{"ruleId":"509","severity":1,"message":"575","line":16,"column":7,"nodeType":"511","endLine":16,"endColumn":20,"suggestions":"576"},{"ruleId":"509","severity":1,"message":"533","line":20,"column":7,"nodeType":"511","endLine":20,"endColumn":20,"suggestions":"577"},{"ruleId":"487","severity":1,"message":"578","line":47,"column":12,"nodeType":"489","messageId":"490","endLine":47,"endColumn":24},{"ruleId":"487","severity":1,"message":"579","line":50,"column":12,"nodeType":"489","messageId":"490","endLine":50,"endColumn":27},{"ruleId":"487","severity":1,"message":"580","line":54,"column":12,"nodeType":"489","messageId":"490","endLine":54,"endColumn":26},{"ruleId":"487","severity":1,"message":"581","line":56,"column":12,"nodeType":"489","messageId":"490","endLine":56,"endColumn":25},{"ruleId":"487","severity":1,"message":"582","line":58,"column":12,"nodeType":"489","messageId":"490","endLine":58,"endColumn":26},{"ruleId":"487","severity":1,"message":"583","line":59,"column":12,"nodeType":"489","messageId":"490","endLine":59,"endColumn":28},{"ruleId":"509","severity":1,"message":"584","line":72,"column":7,"nodeType":"511","endLine":72,"endColumn":23,"suggestions":"585"},{"ruleId":"487","severity":1,"message":"586","line":74,"column":11,"nodeType":"489","messageId":"490","endLine":74,"endColumn":17},{"ruleId":"487","severity":1,"message":"587","line":76,"column":19,"nodeType":"489","messageId":"490","endLine":76,"endColumn":23},{"ruleId":"588","severity":1,"message":"589","line":124,"column":22,"nodeType":"489","messageId":"590","endLine":124,"endColumn":23},{"ruleId":"588","severity":1,"message":"589","line":160,"column":21,"nodeType":"489","messageId":"590","endLine":160,"endColumn":22},{"ruleId":"588","severity":1,"message":"589","line":196,"column":21,"nodeType":"489","messageId":"590","endLine":196,"endColumn":22},{"ruleId":"487","severity":1,"message":"557","line":248,"column":17,"nodeType":"489","messageId":"490","endLine":248,"endColumn":28},{"ruleId":"487","severity":1,"message":"558","line":249,"column":17,"nodeType":"489","messageId":"490","endLine":249,"endColumn":25},{"ruleId":"588","severity":1,"message":"589","line":253,"column":22,"nodeType":"489","messageId":"590","endLine":253,"endColumn":23},{"ruleId":"591","severity":1,"message":"592","line":314,"column":13,"nodeType":"593","endLine":314,"endColumn":17},{"ruleId":"487","severity":1,"message":"569","line":2,"column":10,"nodeType":"489","messageId":"490","endLine":2,"endColumn":13},{"ruleId":"487","severity":1,"message":"594","line":2,"column":37,"nodeType":"489","messageId":"490","endLine":2,"endColumn":47},{"ruleId":"487","severity":1,"message":"595","line":2,"column":65,"nodeType":"489","messageId":"490","endLine":2,"endColumn":77},{"ruleId":"487","severity":1,"message":"596","line":8,"column":13,"nodeType":"489","messageId":"490","endLine":8,"endColumn":24},{"ruleId":"487","severity":1,"message":"597","line":8,"column":44,"nodeType":"489","messageId":"490","endLine":8,"endColumn":57},{"ruleId":"487","severity":1,"message":"497","line":9,"column":9,"nodeType":"489","messageId":"490","endLine":9,"endColumn":29},{"ruleId":"487","severity":1,"message":"498","line":9,"column":31,"nodeType":"489","messageId":"490","endLine":9,"endColumn":49},{"ruleId":"487","severity":1,"message":"499","line":10,"column":28,"nodeType":"489","messageId":"490","endLine":10,"endColumn":49},{"ruleId":"487","severity":1,"message":"500","line":10,"column":51,"nodeType":"489","messageId":"490","endLine":10,"endColumn":70},{"ruleId":"487","severity":1,"message":"598","line":11,"column":25,"nodeType":"489","messageId":"490","endLine":11,"endColumn":36},{"ruleId":"487","severity":1,"message":"599","line":11,"column":38,"nodeType":"489","messageId":"490","endLine":11,"endColumn":56},{"ruleId":"487","severity":1,"message":"501","line":11,"column":58,"nodeType":"489","messageId":"490","endLine":11,"endColumn":74},{"ruleId":"487","severity":1,"message":"502","line":12,"column":21,"nodeType":"489","messageId":"490","endLine":12,"endColumn":28},{"ruleId":"487","severity":1,"message":"503","line":13,"column":23,"nodeType":"489","messageId":"490","endLine":13,"endColumn":28},{"ruleId":"487","severity":1,"message":"504","line":13,"column":30,"nodeType":"489","messageId":"490","endLine":13,"endColumn":42},{"ruleId":"487","severity":1,"message":"505","line":13,"column":44,"nodeType":"489","messageId":"490","endLine":13,"endColumn":54},{"ruleId":"487","severity":1,"message":"508","line":14,"column":49,"nodeType":"489","messageId":"490","endLine":14,"endColumn":60},{"ruleId":"509","severity":1,"message":"510","line":20,"column":7,"nodeType":"511","endLine":20,"endColumn":9,"suggestions":"600"},{"ruleId":"509","severity":1,"message":"515","line":24,"column":7,"nodeType":"511","endLine":24,"endColumn":9,"suggestions":"601"},{"ruleId":"509","severity":1,"message":"517","line":28,"column":7,"nodeType":"511","endLine":28,"endColumn":9,"suggestions":"602"},{"ruleId":"487","severity":1,"message":"603","line":30,"column":11,"nodeType":"489","messageId":"490","endLine":30,"endColumn":23},{"ruleId":"604","severity":1,"message":"605","line":29,"column":138,"nodeType":"537","endLine":29,"endColumn":158},{"ruleId":"487","severity":1,"message":"488","line":1,"column":29,"nodeType":"489","messageId":"490","endLine":1,"endColumn":37},{"ruleId":"487","severity":1,"message":"606","line":110,"column":9,"nodeType":"489","messageId":"490","endLine":110,"endColumn":17},{"ruleId":"487","severity":1,"message":"607","line":114,"column":9,"nodeType":"489","messageId":"490","endLine":114,"endColumn":16},{"ruleId":"483","replacedBy":"608"},{"ruleId":"485","replacedBy":"609"},{"ruleId":"487","severity":1,"message":"610","line":1,"column":17,"nodeType":"489","messageId":"490","endLine":1,"endColumn":26},{"ruleId":"487","severity":1,"message":"596","line":8,"column":11,"nodeType":"489","messageId":"490","endLine":8,"endColumn":22},{"ruleId":"487","severity":1,"message":"611","line":8,"column":24,"nodeType":"489","messageId":"490","endLine":8,"endColumn":40},{"ruleId":"487","severity":1,"message":"597","line":8,"column":42,"nodeType":"489","messageId":"490","endLine":8,"endColumn":55},{"ruleId":"487","severity":1,"message":"497","line":9,"column":11,"nodeType":"489","messageId":"490","endLine":9,"endColumn":31},{"ruleId":"487","severity":1,"message":"498","line":9,"column":33,"nodeType":"489","messageId":"490","endLine":9,"endColumn":51},{"ruleId":"487","severity":1,"message":"612","line":10,"column":11,"nodeType":"489","messageId":"490","endLine":10,"endColumn":28},{"ruleId":"487","severity":1,"message":"499","line":10,"column":30,"nodeType":"489","messageId":"490","endLine":10,"endColumn":51},{"ruleId":"487","severity":1,"message":"500","line":10,"column":53,"nodeType":"489","messageId":"490","endLine":10,"endColumn":72},{"ruleId":"487","severity":1,"message":"613","line":11,"column":11,"nodeType":"489","messageId":"490","endLine":11,"endColumn":25},{"ruleId":"487","severity":1,"message":"598","line":11,"column":27,"nodeType":"489","messageId":"490","endLine":11,"endColumn":38},{"ruleId":"487","severity":1,"message":"599","line":11,"column":40,"nodeType":"489","messageId":"490","endLine":11,"endColumn":58},{"ruleId":"487","severity":1,"message":"501","line":11,"column":60,"nodeType":"489","messageId":"490","endLine":11,"endColumn":76},{"ruleId":"487","severity":1,"message":"614","line":12,"column":11,"nodeType":"489","messageId":"490","endLine":12,"endColumn":21},{"ruleId":"487","severity":1,"message":"502","line":12,"column":23,"nodeType":"489","messageId":"490","endLine":12,"endColumn":30},{"ruleId":"487","severity":1,"message":"573","line":13,"column":11,"nodeType":"489","messageId":"490","endLine":13,"endColumn":19},{"ruleId":"487","severity":1,"message":"503","line":13,"column":21,"nodeType":"489","messageId":"490","endLine":13,"endColumn":26},{"ruleId":"487","severity":1,"message":"504","line":13,"column":28,"nodeType":"489","messageId":"490","endLine":13,"endColumn":40},{"ruleId":"487","severity":1,"message":"505","line":13,"column":42,"nodeType":"489","messageId":"490","endLine":13,"endColumn":52},{"ruleId":"487","severity":1,"message":"615","line":14,"column":11,"nodeType":"489","messageId":"490","endLine":14,"endColumn":18},{"ruleId":"487","severity":1,"message":"506","line":14,"column":20,"nodeType":"489","messageId":"490","endLine":14,"endColumn":24},{"ruleId":"487","severity":1,"message":"616","line":14,"column":26,"nodeType":"489","messageId":"490","endLine":14,"endColumn":37},{"ruleId":"487","severity":1,"message":"507","line":14,"column":39,"nodeType":"489","messageId":"490","endLine":14,"endColumn":48},{"ruleId":"487","severity":1,"message":"617","line":15,"column":11,"nodeType":"489","messageId":"490","endLine":15,"endColumn":36},{"ruleId":"487","severity":1,"message":"618","line":15,"column":38,"nodeType":"489","messageId":"490","endLine":15,"endColumn":45},{"ruleId":"487","severity":1,"message":"508","line":15,"column":47,"nodeType":"489","messageId":"490","endLine":15,"endColumn":58},{"ruleId":"487","severity":1,"message":"619","line":15,"column":60,"nodeType":"489","messageId":"490","endLine":15,"endColumn":71},{"ruleId":"487","severity":1,"message":"620","line":15,"column":73,"nodeType":"489","messageId":"490","endLine":15,"endColumn":82},{"ruleId":"487","severity":1,"message":"488","line":1,"column":17,"nodeType":"489","messageId":"490","endLine":1,"endColumn":25},{"ruleId":"487","severity":1,"message":"491","line":3,"column":40,"nodeType":"489","messageId":"490","endLine":3,"endColumn":46},{"ruleId":"487","severity":1,"message":"492","line":51,"column":21,"nodeType":"489","messageId":"490","endLine":51,"endColumn":32},{"ruleId":"487","severity":1,"message":"493","line":55,"column":30,"nodeType":"489","messageId":"490","endLine":55,"endColumn":50},{"ruleId":"487","severity":1,"message":"494","line":61,"column":11,"nodeType":"489","messageId":"490","endLine":61,"endColumn":29},{"ruleId":"487","severity":1,"message":"495","line":61,"column":31,"nodeType":"489","messageId":"490","endLine":61,"endColumn":53},{"ruleId":"487","severity":1,"message":"496","line":15,"column":8,"nodeType":"489","messageId":"490","endLine":15,"endColumn":14},{"ruleId":"487","severity":1,"message":"497","line":19,"column":11,"nodeType":"489","messageId":"490","endLine":19,"endColumn":31},{"ruleId":"487","severity":1,"message":"498","line":19,"column":33,"nodeType":"489","messageId":"490","endLine":19,"endColumn":51},{"ruleId":"487","severity":1,"message":"499","line":20,"column":30,"nodeType":"489","messageId":"490","endLine":20,"endColumn":51},{"ruleId":"487","severity":1,"message":"500","line":20,"column":53,"nodeType":"489","messageId":"490","endLine":20,"endColumn":72},{"ruleId":"487","severity":1,"message":"501","line":21,"column":60,"nodeType":"489","messageId":"490","endLine":21,"endColumn":76},{"ruleId":"487","severity":1,"message":"502","line":22,"column":23,"nodeType":"489","messageId":"490","endLine":22,"endColumn":30},{"ruleId":"487","severity":1,"message":"503","line":23,"column":21,"nodeType":"489","messageId":"490","endLine":23,"endColumn":26},{"ruleId":"487","severity":1,"message":"504","line":23,"column":28,"nodeType":"489","messageId":"490","endLine":23,"endColumn":40},{"ruleId":"487","severity":1,"message":"505","line":23,"column":42,"nodeType":"489","messageId":"490","endLine":23,"endColumn":52},{"ruleId":"487","severity":1,"message":"506","line":24,"column":20,"nodeType":"489","messageId":"490","endLine":24,"endColumn":24},{"ruleId":"487","severity":1,"message":"507","line":24,"column":39,"nodeType":"489","messageId":"490","endLine":24,"endColumn":48},{"ruleId":"487","severity":1,"message":"508","line":25,"column":47,"nodeType":"489","messageId":"490","endLine":25,"endColumn":58},{"ruleId":"509","severity":1,"message":"510","line":70,"column":5,"nodeType":"511","endLine":70,"endColumn":7,"suggestions":"621"},{"ruleId":"509","severity":1,"message":"513","line":75,"column":5,"nodeType":"511","endLine":75,"endColumn":14,"suggestions":"622"},{"ruleId":"509","severity":1,"message":"515","line":79,"column":5,"nodeType":"511","endLine":79,"endColumn":7,"suggestions":"623"},{"ruleId":"509","severity":1,"message":"517","line":83,"column":5,"nodeType":"511","endLine":83,"endColumn":7,"suggestions":"624"},{"ruleId":"509","severity":1,"message":"519","line":87,"column":5,"nodeType":"511","endLine":87,"endColumn":7,"suggestions":"625"},{"ruleId":"487","severity":1,"message":"610","line":1,"column":17,"nodeType":"489","messageId":"490","endLine":1,"endColumn":26},{"ruleId":"487","severity":1,"message":"596","line":8,"column":11,"nodeType":"489","messageId":"490","endLine":8,"endColumn":22},{"ruleId":"487","severity":1,"message":"611","line":8,"column":24,"nodeType":"489","messageId":"490","endLine":8,"endColumn":40},{"ruleId":"487","severity":1,"message":"597","line":8,"column":42,"nodeType":"489","messageId":"490","endLine":8,"endColumn":55},{"ruleId":"487","severity":1,"message":"497","line":9,"column":11,"nodeType":"489","messageId":"490","endLine":9,"endColumn":31},{"ruleId":"487","severity":1,"message":"498","line":9,"column":33,"nodeType":"489","messageId":"490","endLine":9,"endColumn":51},{"ruleId":"487","severity":1,"message":"612","line":10,"column":11,"nodeType":"489","messageId":"490","endLine":10,"endColumn":28},{"ruleId":"487","severity":1,"message":"499","line":10,"column":30,"nodeType":"489","messageId":"490","endLine":10,"endColumn":51},{"ruleId":"487","severity":1,"message":"500","line":10,"column":53,"nodeType":"489","messageId":"490","endLine":10,"endColumn":72},{"ruleId":"487","severity":1,"message":"613","line":11,"column":11,"nodeType":"489","messageId":"490","endLine":11,"endColumn":25},{"ruleId":"487","severity":1,"message":"598","line":11,"column":27,"nodeType":"489","messageId":"490","endLine":11,"endColumn":38},{"ruleId":"487","severity":1,"message":"599","line":11,"column":40,"nodeType":"489","messageId":"490","endLine":11,"endColumn":58},{"ruleId":"487","severity":1,"message":"501","line":11,"column":60,"nodeType":"489","messageId":"490","endLine":11,"endColumn":76},{"ruleId":"487","severity":1,"message":"614","line":12,"column":11,"nodeType":"489","messageId":"490","endLine":12,"endColumn":21},{"ruleId":"487","severity":1,"message":"502","line":12,"column":23,"nodeType":"489","messageId":"490","endLine":12,"endColumn":30},{"ruleId":"487","severity":1,"message":"573","line":13,"column":11,"nodeType":"489","messageId":"490","endLine":13,"endColumn":19},{"ruleId":"487","severity":1,"message":"503","line":13,"column":21,"nodeType":"489","messageId":"490","endLine":13,"endColumn":26},{"ruleId":"487","severity":1,"message":"504","line":13,"column":28,"nodeType":"489","messageId":"490","endLine":13,"endColumn":40},{"ruleId":"487","severity":1,"message":"505","line":13,"column":42,"nodeType":"489","messageId":"490","endLine":13,"endColumn":52},{"ruleId":"487","severity":1,"message":"615","line":14,"column":11,"nodeType":"489","messageId":"490","endLine":14,"endColumn":18},{"ruleId":"487","severity":1,"message":"506","line":14,"column":20,"nodeType":"489","messageId":"490","endLine":14,"endColumn":24},{"ruleId":"487","severity":1,"message":"616","line":14,"column":26,"nodeType":"489","messageId":"490","endLine":14,"endColumn":37},{"ruleId":"487","severity":1,"message":"507","line":14,"column":39,"nodeType":"489","messageId":"490","endLine":14,"endColumn":48},{"ruleId":"487","severity":1,"message":"617","line":15,"column":11,"nodeType":"489","messageId":"490","endLine":15,"endColumn":36},{"ruleId":"487","severity":1,"message":"618","line":15,"column":38,"nodeType":"489","messageId":"490","endLine":15,"endColumn":45},{"ruleId":"487","severity":1,"message":"508","line":15,"column":47,"nodeType":"489","messageId":"490","endLine":15,"endColumn":58},{"ruleId":"487","severity":1,"message":"619","line":15,"column":60,"nodeType":"489","messageId":"490","endLine":15,"endColumn":71},{"ruleId":"487","severity":1,"message":"620","line":15,"column":73,"nodeType":"489","messageId":"490","endLine":15,"endColumn":82},{"ruleId":"487","severity":1,"message":"594","line":2,"column":37,"nodeType":"489","messageId":"490","endLine":2,"endColumn":47},{"ruleId":"487","severity":1,"message":"595","line":2,"column":65,"nodeType":"489","messageId":"490","endLine":2,"endColumn":77},{"ruleId":"487","severity":1,"message":"596","line":8,"column":13,"nodeType":"489","messageId":"490","endLine":8,"endColumn":24},{"ruleId":"487","severity":1,"message":"597","line":8,"column":44,"nodeType":"489","messageId":"490","endLine":8,"endColumn":57},{"ruleId":"487","severity":1,"message":"497","line":9,"column":9,"nodeType":"489","messageId":"490","endLine":9,"endColumn":29},{"ruleId":"487","severity":1,"message":"498","line":9,"column":31,"nodeType":"489","messageId":"490","endLine":9,"endColumn":49},{"ruleId":"487","severity":1,"message":"499","line":10,"column":28,"nodeType":"489","messageId":"490","endLine":10,"endColumn":49},{"ruleId":"487","severity":1,"message":"500","line":10,"column":51,"nodeType":"489","messageId":"490","endLine":10,"endColumn":70},{"ruleId":"487","severity":1,"message":"598","line":11,"column":25,"nodeType":"489","messageId":"490","endLine":11,"endColumn":36},{"ruleId":"487","severity":1,"message":"599","line":11,"column":38,"nodeType":"489","messageId":"490","endLine":11,"endColumn":56},{"ruleId":"487","severity":1,"message":"501","line":11,"column":58,"nodeType":"489","messageId":"490","endLine":11,"endColumn":74},{"ruleId":"487","severity":1,"message":"502","line":12,"column":21,"nodeType":"489","messageId":"490","endLine":12,"endColumn":28},{"ruleId":"487","severity":1,"message":"503","line":13,"column":23,"nodeType":"489","messageId":"490","endLine":13,"endColumn":28},{"ruleId":"487","severity":1,"message":"504","line":13,"column":30,"nodeType":"489","messageId":"490","endLine":13,"endColumn":42},{"ruleId":"487","severity":1,"message":"505","line":13,"column":44,"nodeType":"489","messageId":"490","endLine":13,"endColumn":54},{"ruleId":"487","severity":1,"message":"508","line":14,"column":49,"nodeType":"489","messageId":"490","endLine":14,"endColumn":60},{"ruleId":"509","severity":1,"message":"510","line":20,"column":7,"nodeType":"511","endLine":20,"endColumn":9,"suggestions":"626"},{"ruleId":"509","severity":1,"message":"515","line":24,"column":7,"nodeType":"511","endLine":24,"endColumn":9,"suggestions":"627"},{"ruleId":"509","severity":1,"message":"517","line":28,"column":7,"nodeType":"511","endLine":28,"endColumn":9,"suggestions":"628"},{"ruleId":"487","severity":1,"message":"603","line":30,"column":11,"nodeType":"489","messageId":"490","endLine":30,"endColumn":23},{"ruleId":"487","severity":1,"message":"488","line":1,"column":40,"nodeType":"489","messageId":"490","endLine":1,"endColumn":48},{"ruleId":"487","severity":1,"message":"521","line":12,"column":13,"nodeType":"489","messageId":"490","endLine":12,"endColumn":18},{"ruleId":"487","severity":1,"message":"522","line":13,"column":65,"nodeType":"489","messageId":"490","endLine":13,"endColumn":82},{"ruleId":"509","severity":1,"message":"523","line":17,"column":7,"nodeType":"511","endLine":17,"endColumn":20,"suggestions":"629"},{"ruleId":"487","severity":1,"message":"525","line":21,"column":13,"nodeType":"489","messageId":"490","endLine":21,"endColumn":18},{"ruleId":"487","severity":1,"message":"526","line":21,"column":20,"nodeType":"489","messageId":"490","endLine":21,"endColumn":30},{"ruleId":"487","severity":1,"message":"527","line":21,"column":32,"nodeType":"489","messageId":"490","endLine":21,"endColumn":38},{"ruleId":"487","severity":1,"message":"528","line":22,"column":13,"nodeType":"489","messageId":"490","endLine":22,"endColumn":24},{"ruleId":"487","severity":1,"message":"529","line":23,"column":13,"nodeType":"489","messageId":"490","endLine":23,"endColumn":29},{"ruleId":"487","severity":1,"message":"530","line":23,"column":31,"nodeType":"489","messageId":"490","endLine":23,"endColumn":48},{"ruleId":"509","severity":1,"message":"531","line":28,"column":7,"nodeType":"511","endLine":28,"endColumn":16,"suggestions":"630"},{"ruleId":"509","severity":1,"message":"533","line":32,"column":7,"nodeType":"511","endLine":32,"endColumn":16,"suggestions":"631"},{"ruleId":"535","severity":1,"message":"536","line":57,"column":17,"nodeType":"537","endLine":57,"endColumn":32},{"ruleId":"560","severity":1,"message":"561","line":12,"column":13,"nodeType":"562","messageId":"563","endLine":12,"endColumn":15},{"ruleId":"487","severity":1,"message":"564","line":20,"column":11,"nodeType":"489","messageId":"490","endLine":20,"endColumn":18},{"ruleId":"487","severity":1,"message":"565","line":36,"column":9,"nodeType":"489","messageId":"490","endLine":36,"endColumn":23},{"ruleId":"487","severity":1,"message":"566","line":41,"column":9,"nodeType":"489","messageId":"490","endLine":41,"endColumn":23},{"ruleId":"487","severity":1,"message":"567","line":57,"column":10,"nodeType":"489","messageId":"490","endLine":57,"endColumn":23},{"ruleId":"487","severity":1,"message":"568","line":92,"column":34,"nodeType":"489","messageId":"490","endLine":92,"endColumn":38},{"ruleId":"487","severity":1,"message":"574","line":9,"column":9,"nodeType":"489","messageId":"490","endLine":9,"endColumn":12},{"ruleId":"509","severity":1,"message":"575","line":16,"column":7,"nodeType":"511","endLine":16,"endColumn":20,"suggestions":"632"},{"ruleId":"509","severity":1,"message":"533","line":20,"column":7,"nodeType":"511","endLine":20,"endColumn":20,"suggestions":"633"},{"ruleId":"487","severity":1,"message":"578","line":47,"column":12,"nodeType":"489","messageId":"490","endLine":47,"endColumn":24},{"ruleId":"487","severity":1,"message":"579","line":50,"column":12,"nodeType":"489","messageId":"490","endLine":50,"endColumn":27},{"ruleId":"487","severity":1,"message":"580","line":54,"column":12,"nodeType":"489","messageId":"490","endLine":54,"endColumn":26},{"ruleId":"487","severity":1,"message":"581","line":56,"column":12,"nodeType":"489","messageId":"490","endLine":56,"endColumn":25},{"ruleId":"487","severity":1,"message":"582","line":58,"column":12,"nodeType":"489","messageId":"490","endLine":58,"endColumn":26},{"ruleId":"487","severity":1,"message":"583","line":59,"column":12,"nodeType":"489","messageId":"490","endLine":59,"endColumn":28},{"ruleId":"509","severity":1,"message":"584","line":72,"column":7,"nodeType":"511","endLine":72,"endColumn":23,"suggestions":"634"},{"ruleId":"487","severity":1,"message":"586","line":74,"column":11,"nodeType":"489","messageId":"490","endLine":74,"endColumn":17},{"ruleId":"487","severity":1,"message":"587","line":76,"column":19,"nodeType":"489","messageId":"490","endLine":76,"endColumn":23},{"ruleId":"588","severity":1,"message":"589","line":124,"column":22,"nodeType":"489","messageId":"590","endLine":124,"endColumn":23},{"ruleId":"588","severity":1,"message":"589","line":160,"column":21,"nodeType":"489","messageId":"590","endLine":160,"endColumn":22},{"ruleId":"588","severity":1,"message":"589","line":196,"column":21,"nodeType":"489","messageId":"590","endLine":196,"endColumn":22},{"ruleId":"487","severity":1,"message":"557","line":248,"column":17,"nodeType":"489","messageId":"490","endLine":248,"endColumn":28},{"ruleId":"487","severity":1,"message":"558","line":249,"column":17,"nodeType":"489","messageId":"490","endLine":249,"endColumn":25},{"ruleId":"588","severity":1,"message":"589","line":253,"column":22,"nodeType":"489","messageId":"590","endLine":253,"endColumn":23},{"ruleId":"591","severity":1,"message":"592","line":314,"column":13,"nodeType":"593","endLine":314,"endColumn":17},{"ruleId":"487","severity":1,"message":"573","line":8,"column":13,"nodeType":"489","messageId":"490","endLine":8,"endColumn":21},{"ruleId":"487","severity":1,"message":"504","line":8,"column":30,"nodeType":"489","messageId":"490","endLine":8,"endColumn":42},{"ruleId":"487","severity":1,"message":"505","line":8,"column":44,"nodeType":"489","messageId":"490","endLine":8,"endColumn":54},{"ruleId":"509","severity":1,"message":"570","line":15,"column":8,"nodeType":"511","endLine":15,"endColumn":10,"suggestions":"635"},{"ruleId":"487","severity":1,"message":"572","line":43,"column":57,"nodeType":"489","messageId":"490","endLine":43,"endColumn":66},{"ruleId":"604","severity":1,"message":"605","line":29,"column":138,"nodeType":"537","endLine":29,"endColumn":158},{"ruleId":"487","severity":1,"message":"488","line":1,"column":29,"nodeType":"489","messageId":"490","endLine":1,"endColumn":37},{"ruleId":"487","severity":1,"message":"606","line":110,"column":9,"nodeType":"489","messageId":"490","endLine":110,"endColumn":17},{"ruleId":"487","severity":1,"message":"607","line":114,"column":9,"nodeType":"489","messageId":"490","endLine":114,"endColumn":16},{"ruleId":"487","severity":1,"message":"569","line":2,"column":10,"nodeType":"489","messageId":"490","endLine":2,"endColumn":13},{"ruleId":"487","severity":1,"message":"569","line":2,"column":10,"nodeType":"489","messageId":"490","endLine":2,"endColumn":13},"no-native-reassign",["636"],"no-negated-in-lhs",["637"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'vacApi' is defined but never used.","'setVacStats' is assigned a value but never used.","'setCountryStatsError' is assigned a value but never used.","'vaccinationDailies' is assigned a value but never used.","'setVaccinationsDailies' is assigned a value but never used.","'Banner' is defined but never used.","'countryTotalsLoading' is assigned a value but never used.","'countryTotalsError' is assigned a value but never used.","'countryDailiesLoading' is assigned a value but never used.","'countryDailiesError' is assigned a value but never used.","'countryInfoError' is assigned a value but never used.","'whosBad' is assigned a value but never used.","'earth' is assigned a value but never used.","'earthLoading' is assigned a value but never used.","'earthError' is assigned a value but never used.","'owid' is assigned a value but never used.","'owidError' is assigned a value but never used.","'userDetails' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserGeolocationDetails'. Either include it or remove the dependency array.","ArrayExpression",["638"],"React Hook useEffect has a missing dependency: 'getCountryInfo'. Either include it or remove the dependency array.",["639"],"React Hook useEffect has a missing dependency: 'getEarth'. Either include it or remove the dependency array.",["640"],"React Hook useEffect has a missing dependency: 'getWhosBad'. Either include it or remove the dependency array.",["641"],"React Hook useEffect has a missing dependency: 'getOwid'. Either include it or remove the dependency array.",["642"],"'stats' is assigned a value but never used.","'vaccinationsError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCountryTotals'. Either include it or remove the dependency array.",["643"],"'cases' is assigned a value but never used.","'todayCases' is assigned a value but never used.","'deaths' is assigned a value but never used.","'todayDeaths' is assigned a value but never used.","'oneCasePerPeople' is assigned a value but never used.","'oneDeathPerPeople' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCountryStats'. Either include it or remove the dependency array.",["644"],"React Hook useEffect has a missing dependency: 'getVaccinations'. Either include it or remove the dependency array.",["645"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'computeHeadingLevel' is defined but never used.","'countryData' is assigned a value but never used.","'whosBadLoading' is assigned a value but never used.","'whosBadError' is assigned a value but never used.","'highCases' is assigned a value but never used.","'setHighCases' is assigned a value but never used.","'highCasesDate' is assigned a value but never used.","'setHighCasesDate' is assigned a value but never used.","'highDeaths' is assigned a value but never used.","'setHighDeaths' is assigned a value but never used.","'highDeathsDate' is assigned a value but never used.","'setHighDeathsDate' is assigned a value but never used.",["646"],"'twoDayTotal' is assigned a value but never used.","'twoDayArr' is assigned a value but never used.","'dailyHigh' is assigned a value but never used.","'dailyHighDate' is defined but never used.","'dailyDeath' is assigned a value but never used.","'dailyDeathDate' is defined but never used.","'highDataRow' is assigned a value but never used.","'highData' is assigned a value but never used.","'start' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'history' is assigned a value but never used.","'topThreeDayAve' is assigned a value but never used.","'topPastWeekAve' is assigned a value but never used.","'topPvPWeekAve' is assigned a value but never used.","'name' is assigned a value but never used.","'Bar' is defined but never used.","React Hook useEffect has a missing dependency: 'getCountries'. Either include it or remove the dependency array.",["647"],"'recovered' is assigned a value but never used.","'getEarth' is assigned a value but never used.","'num' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCountryDailies'. Either include it or remove the dependency array.",["648"],["649"],"'twoWeekCases' is assigned a value but never used.","'threeMonthCases' is assigned a value but never used.","'threeDayDeaths' is assigned a value but never used.","'twoWeekDeaths' is assigned a value but never used.","'twoMonthDeaths' is assigned a value but never used.","'threeMonthDeaths' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'okComputer'. Either include it or remove the dependency array.",["650"],"'tester' is assigned a value but never used.","'data' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'AllContext' is defined but never used.","'StatsContext' is defined but never used.","'countryList' is assigned a value but never used.","'countryTotals' is assigned a value but never used.","'countryInfo' is assigned a value but never used.","'countryInfoLoading' is assigned a value but never used.",["651"],["652"],["653"],"'handleSelect' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","'topTests' is assigned a value but never used.","'topHosp' is assigned a value but never used.",["636"],["637"],"'useEffect' is defined but never used.","'getCountryTotals' is assigned a value but never used.","'getCountryDailies' is assigned a value but never used.","'getCountryInfo' is assigned a value but never used.","'getWhosBad' is assigned a value but never used.","'getOwid' is assigned a value but never used.","'owidLoading' is assigned a value but never used.","'getUserGeolocationDetails' is assigned a value but never used.","'country' is assigned a value but never used.","'userLoading' is assigned a value but never used.","'userError' is assigned a value but never used.",["654"],["655"],["656"],["657"],["658"],["659"],["660"],["661"],["662"],["663"],["664"],["665"],["666"],["667"],["668"],"no-global-assign","no-unsafe-negation",{"desc":"669","fix":"670"},{"desc":"671","fix":"672"},{"desc":"673","fix":"674"},{"desc":"675","fix":"676"},{"desc":"677","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"683","fix":"684"},{"desc":"675","fix":"685"},{"desc":"686","fix":"687"},{"desc":"688","fix":"689"},{"desc":"690","fix":"691"},{"desc":"692","fix":"693"},{"desc":"669","fix":"694"},{"desc":"673","fix":"695"},{"desc":"675","fix":"696"},{"desc":"669","fix":"697"},{"desc":"671","fix":"698"},{"desc":"673","fix":"699"},{"desc":"675","fix":"700"},{"desc":"677","fix":"701"},{"desc":"669","fix":"702"},{"desc":"673","fix":"703"},{"desc":"675","fix":"704"},{"desc":"679","fix":"705"},{"desc":"681","fix":"706"},{"desc":"683","fix":"707"},{"desc":"688","fix":"708"},{"desc":"690","fix":"709"},{"desc":"692","fix":"710"},{"desc":"686","fix":"711"},"Update the dependencies array to be: [getUserGeolocationDetails]",{"range":"712","text":"713"},"Update the dependencies array to be: [country, getCountryInfo]",{"range":"714","text":"715"},"Update the dependencies array to be: [getEarth]",{"range":"716","text":"717"},"Update the dependencies array to be: [getWhosBad]",{"range":"718","text":"719"},"Update the dependencies array to be: [getOwid]",{"range":"720","text":"721"},"Update the dependencies array to be: [countryName, getCountryTotals]",{"range":"722","text":"723"},"Update the dependencies array to be: [country, getCountryStats]",{"range":"724","text":"725"},"Update the dependencies array to be: [country, getVaccinations]",{"range":"726","text":"727"},{"range":"728","text":"719"},"Update the dependencies array to be: [getCountries]",{"range":"729","text":"730"},"Update the dependencies array to be: [countryName, getCountryDailies]",{"range":"731","text":"732"},"Update the dependencies array to be: [countryName, getVaccinations]",{"range":"733","text":"734"},"Update the dependencies array to be: [countryDailies, okComputer]",{"range":"735","text":"736"},{"range":"737","text":"713"},{"range":"738","text":"717"},{"range":"739","text":"719"},{"range":"740","text":"713"},{"range":"741","text":"715"},{"range":"742","text":"717"},{"range":"743","text":"719"},{"range":"744","text":"721"},{"range":"745","text":"713"},{"range":"746","text":"717"},{"range":"747","text":"719"},{"range":"748","text":"723"},{"range":"749","text":"725"},{"range":"750","text":"727"},{"range":"751","text":"732"},{"range":"752","text":"734"},{"range":"753","text":"736"},{"range":"754","text":"730"},[2466,2468],"[getUserGeolocationDetails]",[2562,2571],"[country, getCountryInfo]",[2620,2622],"[getEarth]",[2673,2675],"[getWhosBad]",[2723,2725],"[getOwid]",[844,857],"[countryName, getCountryTotals]",[1191,1200],"[country, getCountryStats]",[1271,1280],"[country, getVaccinations]",[962,964],[529,531],"[getCountries]",[687,700],"[countryName, getCountryDailies]",[775,788],"[countryName, getVaccinations]",[2982,2998],"[countryDailies, okComputer]",[972,974],[1031,1033],[1096,1098],[2466,2468],[2562,2571],[2620,2622],[2673,2675],[2723,2725],[972,974],[1031,1033],[1096,1098],[844,857],[1191,1200],[1271,1280],[687,700],[775,788],[2982,2998],[529,531]]